import{c3 as s,c4 as n,aQ as d,B as u,F as l}from"./index-CdyqwYB1.js";import{d as g}from"./FeatureLayerView2D-t84-VAMk.js";import"./Container-DK6YgK9c.js";import"./featureConversionUtils-76XyQOp_.js";import"./OptimizedFeature-wY9c6auI.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-ecKXgWf6.js";import"./AttributeBinsFeatureSet-C59_N8Oz.js";import"./AttributeBinsQuery-Bxid5PHB.js";import"./queryUtils-yd2t9j3C.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BznTbx9d.js";import"./LayerView-BCMBmvWq.js";import"./TechniqueInstance-BkNnOSg3.js";import"./UpdateTracking2D-CsLaO2Ee.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils--K56hNB9.js";import"./floatRGBA-Bxcxs9Ey.js";import"./Rect-CUzevAry.js";import"./Utils-jY7Iz8A-.js";import"./FramebufferObject-C4sXoppm.js";import"./VertexArrayObject-C7zfXyhi.js";import"./TileContainer-CTQOYkWQ.js";import"./WGLContainer-BiVKohvS.js";import"./ProgramTemplate-BuYeGkfM.js";import"./vec3f32-nZdmKIgz.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-D7PyvP_S.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CBj5U0g_.js";import"./ShaderBuilder-DkGrAxOo.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-B5UzubQR.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-dZ_EP3z0.js";import"./constants-B4mRqufT.js";import"./parquet-C0EOpqza.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-Dol2Yog4.js";import"./RefreshableLayerView-CjdPZjIa.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ri=i;export{ri as default};
