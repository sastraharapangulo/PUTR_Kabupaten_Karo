import{c3 as l,c4 as h,bu as g,V as w,c5 as f,c6 as d,c7 as n,B as u,F as b}from"./index-CdyqwYB1.js";import{S as V,y as S}from"./LayerView-BCMBmvWq.js";import{t as _}from"./GraphicContainer-C1OrP7aG.js";import{A as T}from"./GraphicsView2D-CpT1NyJ8.js";import"./Container-DK6YgK9c.js";import"./AGraphicContainer-DSWx7MkC.js";import"./TechniqueInstance-BkNnOSg3.js";import"./UpdateTracking2D-CsLaO2Ee.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-wY9c6auI.js";import"./rasterizingUtils--K56hNB9.js";import"./floatRGBA-Bxcxs9Ey.js";import"./Rect-CUzevAry.js";import"./Utils-jY7Iz8A-.js";import"./FramebufferObject-C4sXoppm.js";import"./VertexArrayObject-C7zfXyhi.js";import"./TileContainer-CTQOYkWQ.js";import"./WGLContainer-BiVKohvS.js";import"./ProgramTemplate-BuYeGkfM.js";import"./vec3f32-nZdmKIgz.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-76XyQOp_.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-D7PyvP_S.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CBj5U0g_.js";import"./ShaderBuilder-DkGrAxOo.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-B5UzubQR.js";import"./OverrideHelper-MCYYIguR.js";import"./quantizationUtils-Bf8-Qf7-.js";import"./AttributeStore-CYJPgjqC.js";import"./queryUtils-yd2t9j3C.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CBmijiZA.js";import"./TimeOnly-iFzU6JTj.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CYDrAphy.js";import"./dehydratedFeatures-DNUkEvea.js";let y=class extends V(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(i=>{const t=this._popupTemplates.get(i),s=i.hitTest(e);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=t;return s}).map(i=>({type:"graphic",graphic:i,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([l(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:i}of e){const t=g.fromJSON(o),s=new w(t.features),p=i.drawingInfo,c=r?f.fromJSON(r):null,a=d(p.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=m,this._popupTemplates.set(m,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const ne=y;export{ne as default};
