import{B as n,E as o,F as $,V as S,f$ as U,hh as _,t as x,hi as H,A as I,cE as g}from"./index-CdyqwYB1.js";import{S as E,y as O}from"./LayerView-BCMBmvWq.js";import"./Container-DK6YgK9c.js";const u=Symbol(),A=p=>{let r=class extends p{constructor(){super(...arguments),this.layerViews=new S,this._debouncedUpdate=U(async()=>{const{layer:e,parent:t}=this,s=t==null?void 0:t.footprintLayerView;let i=[];const d=this._createQuery();if(d&&s){const{features:h}=await s.queryFeatures(d);this.suspended||(i=h.map(c=>e.acquireLayer(c)))}this.removeHandles(u),this.addHandles(i,u)})}get creatingLayerViews(){var e;return((e=this.view)==null?void 0:e.layerViewManager.isCreatingLayerViewsForLayer(this.layer))??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(e=>e.updating)}enableLayerUpdates(){return _([this._updatingHandles.addWhen(()=>{var e,t;return((t=(e=this.parent)==null?void 0:e.footprintLayerView)==null?void 0:t.dataUpdating)===!1},()=>this.updateLayers()),this._updatingHandles.add(()=>{var e,t,s,i,d;return[this.layer.maximumVisibleSublayers,(e=this.layer.parent)==null?void 0:e.orderBy,(s=(t=this.parent)==null?void 0:t.footprintLayerView)==null?void 0:s.filter,(d=(i=this.parent)==null?void 0:i.footprintLayerView)==null?void 0:d.timeExtent,this.suspended]},()=>this.updateLayers()),x(()=>this.removeHandles(u))])}updateLayers(){this.suspended?this.removeHandles(u):this._updatingHandles.addPromise(H(this._debouncedUpdate()).catch(e=>{I.getLogger(this).error(e)}))}_createQuery(){var V,v;const e=(V=this.parent)==null?void 0:V.footprintLayerView,t=(v=this.layer)==null?void 0:v.parent;if(!e||!t||t.destroyed)return null;const{layer:{maximumVisibleSublayers:s},view:{scale:i}}=this;if(!s)return null;const{itemTypeField:d,itemSourceField:h,itemNameField:c,minScaleField:m,maxScaleField:L,objectIdField:F,orderBy:w}=t,C=g(`${m} IS NULL OR ${i} <= ${m} OR ${m} = 0`,`${L} IS NULL OR ${i} >= ${L}`),l=w==null?void 0:w.find(y=>y.field&&!y.valueExpression),a=e.createQuery();if(a.returnGeometry=!1,a.num=s,a.outFields=[F,h,c],a.where=g(a.where,C),this.unsupportedItemTypes!=null){const y=`${d} NOT IN (${this.unsupportedItemTypes.map(b=>`'${b}'`)})`;a.where=g(a.where,y)}return l!=null&&l.field&&(a.orderByFields=[`${l.field} ${l.order==="descending"?"DESC":"ASC"}`],a.outFields.push(l.field)),a}};return n([o({readOnly:!0})],r.prototype,"creatingLayerViews",null),n([o()],r.prototype,"layer",void 0),n([o()],r.prototype,"layerViews",void 0),n([o({readOnly:!0})],r.prototype,"unsupportedItemTypes",void 0),n([o()],r.prototype,"parent",void 0),n([o({readOnly:!0})],r.prototype,"isUpdating",null),r=n([$("esri.views.layers.CatalogDynamicGroupLayerView")],r),r};let f=class extends A(E(O)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new S}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(p){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((p,r)=>this.container.addChildAt(p.container,r))}};f=n([$("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],f);const D=f;export{D as default};
