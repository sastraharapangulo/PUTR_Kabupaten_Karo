const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/jsonConverter-DkFs4gof.js","assets/Transformation2D-B_tst7So.js","assets/ProjectionTransformation-C67TcmnJ.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-CdyqwYB1.js","assets/index-CxJz3tXl.css"])))=>i.map(i=>d[i]);
import{at as m,ca as _,_ as d}from"./index-CdyqwYB1.js";import{i as v,c as x,u as G,s as g}from"./operatorGeodesicBuffer-BLC1h8cz.js";import{e as l}from"./geodeticCurveType-CirnHLSB.js";import"./SimpleGeometryCursor-B92kdZ15.js";let c,y,f;function N(){return!!c&&g()}async function E(){if(!N()){const[t]=await Promise.all([d(()=>import("./jsonConverter-DkFs4gof.js"),__vite__mapDeps([0,1,2,3,4,5])),G()]);c=t.fromGeometries,y=t.fromGeometry,f=t.toGeometry}}function L(t,a,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,unit:r}=s;r&&(a=m(a,r,"meters"),e&&(e=m(e,r,"meters")));const o=y(t),i=o.getSpatialReference();return f(v(o.getGeometry(),i,l[n],a,e),i)}function R(t,a,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,union:r=!1,unit:o}=s;o&&(a=a.map(u=>m(u,o,"meters")),e&&(e=m(e,o,"meters")));const[i,p]=c(t);return x(i,p,l[n],a,e,r).map(u=>f(u,p)).filter(_)}export{L as execute,R as executeMany,N as isLoaded,E as load};
