import{hN as l,ex as _,ee as h,ds as p,aX as v,ea as u,B as x,F as y}from"./index-D805BexR.js";import{v as L,b as $,j}from"./lineSegment-BHWXTQCe.js";import{E as P,U as f,i as C}from"./sphere-CdMHh-xJ.js";import{b}from"./Octree-CzBrd7yy.js";import{m as S}from"./edgeProcessing-DfwIiyyt.js";import"./plane-L6qtSBjg.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./InterleavedLayout-CVhvZaXk.js";import"./BufferView-jLJ9pYV0.js";import"./types-D0PSWh4d.js";import"./deduplicate-Dx-x07q3.js";import"./Indices-D7D0yvvJ.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-BL9HLK4F.js";import"./Normals-DBlsBxrv.js";const I=1e3;function V(t,o,e){const n=P(),s=f(n);return l(s,s,t,.5),l(s,s,o,.5),n[3]=_(s,t),h(s,s,e),n}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),v(o),await this._ensureEdgeLocations(t,o);const e=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,e),e.length<I),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,o){const e=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;e.push({id:c,uid:r})}return!0},t.bounds),!e.length)return;const n={components:e},s=await this.remoteClient.invoke("fetchAllEdgeLocations",n,o??{});for(const i of s.components)this._setFetchEdgeLocations(i)}async add(t){const o=new m(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const e=[];this._edges.forEachNeighbor(n=>(n.component===o&&e.push(n),!0),o.bounds),this._edges.remove(e),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const e=S.createView(t.locations),n=new Array(e.count),s=p(),i=p();for(let d=0;d<e.count;d++){e.position0.getVec(d,s),e.position1.getVec(d,i);const a=V(s,i,t.origin),E=new T(o,d,a);n[d]=E}this._edges.add(n);const{objectIds:c,origin:r}=t;o.info={locations:e,objectIds:c,origin:r}}_addCandidates(t,o,e){const{info:n}=o.component,{origin:s,objectIds:i}=n,c=n.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,s),h(d,d,s);const a=i[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,r,d,e),w(t,a,r,e),w(t,a,d,e)}_addEdgeCandidate(t,o,e,n,s){if(!t.returnEdge)return;const i=f(t.bounds),c=$(e,n,this._tmpLineSegment),r=j(c,i,this._tmpP3);C(t.bounds,r)&&s.push({type:"edge",objectId:o,target:u(r),distance:_(i,r),start:u(e),end:u(n)})}};g=x([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const Q=g;function w(t,o,e,n){if(!t.returnVertex||!C(t.bounds,e))return;const s=f(t.bounds);n.push({type:"vertex",objectId:o,target:u(e),distance:_(s,e)})}class m{constructor(o,e){this.id=o,this.bounds=e,this.info=null,this.uid=++m.uid}}m.uid=0;class T{constructor(o,e,n){this.component=o,this.index=e,this.bounds=n}}export{Q as default};
