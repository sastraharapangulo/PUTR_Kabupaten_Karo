import{A as M,b as I,gN as O,gO as y,gP as g,H as b,gQ as x,gR as S,gS as h,gT as k,gU as N,gV as P,be as T}from"./index-D805BexR.js";import{B as w,H as $,D as G,C as E}from"./quantizationUtils-MemaCw7r.js";function C(c,e,r,t,a){if(c==null)return null;const s=c.references("geometry")&&a?A(e,t,a):e,o=c.repurposeFeature(s);try{return c.evaluate({...r,$feature:o},c.services)}catch(i){return M.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",i),null}}const u=new Map;function A(c,e,r){const{transform:t,hasZ:a,hasM:s}=r;u.has(e)||u.set(e,L(e));const o=u.get(e)(c.geometry,t,a,s);return{...c,geometry:o}}function L(c){const e={};switch(c){case"esriGeometryPoint":return(r,t,a,s)=>E(t,e,r,a,s);case"esriGeometryPolygon":return(r,t,a,s)=>G(t,e,r,a,s);case"esriGeometryPolyline":return(r,t,a,s)=>$(t,e,r,a,s);case"esriGeometryMultipoint":return(r,t,a,s)=>w(t,e,r,a,s);default:return M.getLogger("esri.views.2d.support.arcadeOnDemand").error(new I("mapview-arcade",`Unable to handle geometryType: ${c}`)),r=>r}}const V=Object.freeze(Object.defineProperty({__proto__:null,default:C},Symbol.toStringTag,{value:"Module"})),R=c=>{if(!c)return[0,0,0,0];const{r:e,g:r,b:t,a}=c;return[e,r,t,255*a]};class n{static findApplicableOverrides(e,r,t){if(e&&r){if(e.primitiveName){let a=!1;for(const s of t)if(s.primitiveName===e.primitiveName){a=!0;break}if(!a)for(const s of r)s.primitiveName===e.primitiveName&&t.push(s)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const a of e.effects)n.findApplicableOverrides(a,r,t);if(e.symbolLayers)for(const a of e.symbolLayers)n.findApplicableOverrides(a,r,t);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const a of e.effects)n.findApplicableOverrides(a,r,t);if(e.markerPlacement&&n.findApplicableOverrides(e.markerPlacement,r,t),e.type==="CIMVectorMarker"){if(e.markerGraphics)for(const a of e.markerGraphics)n.findApplicableOverrides(a,r,t),n.findApplicableOverrides(a.symbol,r,t)}else e.type==="CIMCharacterMarker"?n.findApplicableOverrides(e.symbol,r,t):e.type==="CIMHatchFill"?n.findApplicableOverrides(e.lineSymbol,r,t):e.type==="CIMPictureMarker"&&n.findApplicableOverrides(e.animatedSymbolProperties,r,t)}}}static findEffectOverrides(e,r){if(!e)return null;if(e.type==="CIMGeometricEffectDashes"&&O(e),!r||!e.primitiveName)return{type:"cim-effect-param",effect:e,overrides:[]};const t=y(e),a=e.primitiveName,s=[];for(const o of r)o.primitiveName===a&&s.push(y(o));return{type:"cim-effect-param",effect:t,overrides:g(s)}}static async resolveSymbolOverrides(e,r,t,a,s,o,i){if(!(e!=null&&e.symbol))return null;let{symbol:p,primitiveOverrides:l}=e;const d=!!l;if(!d&&!a)return p;p=b(p),l=b(l);let v=!0;if(r||(r={attributes:{}},v=!1),d){if(v||(l=l.filter(f=>{var m;return!((m=f.valueExpressionInfo)!=null&&m.expression.includes("$feature"))})),i||(l=l.filter(f=>{var m;return!((m=f.valueExpressionInfo)!=null&&m.expression.includes("$view"))})),l.length>0){const f={spatialReference:t,fields:x(r.attributes),geometryType:s};await n.createRenderExpressions(l,f),n.evaluateOverrides(l,r,s??"esriGeometryPoint",o,i)}n.applyOverrides(p,l)}return a&&n.applyDictionaryTextOverrides(p,r,a,null),p}static async createRenderExpressions(e,r){const t=[];for(const a of e){const s=a.valueExpressionInfo;if(!s||n._expressionToRenderExpression.has(s.expression))continue;const o=S(s.expression,r.spatialReference,r.fields);t.push(o),o.then(i=>n._expressionToRenderExpression.set(s.expression,i))}t.length>0&&await Promise.all(t)}static evaluateOverrides(e,r,t,a,s){const o={$view:{scale:s==null?void 0:s.scale}};for(const i of e){i.value&&typeof i.value=="object"&&h(i.value)&&(i.propertyName==="Color"||i.propertyName==="StrokeColor")&&(i.value=R(i.value));const p=i.valueExpressionInfo;if(!p)continue;const l=n._expressionToRenderExpression.get(p.expression);l&&(i.value=C(l,r,o,t,a))}}static applyDictionaryTextOverrides(e,r,t,a,s="Normal"){if(e!=null&&e.type)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":case"CIMTextSymbol":{const o=e.symbolLayers;if(!o)return;for(const i of o)i&&i.type==="CIMVectorMarker"&&n.applyDictionaryTextOverrides(i,r,t,a,e.type==="CIMTextSymbol"?e.textCase:s)}break;case"CIMVectorMarker":{const o=e.markerGraphics;if(!o)return;for(const i of o)i&&n.applyDictionaryTextOverrides(i,r,t,a)}break;case"CIMMarkerGraphic":{const o=e.textString;if(o&&o.includes("[")){const i=k(o,t);e.textString=N(r,i,a,s)}}}}static applyOverrides(e,r,t,a){if(e.primitiveName){for(const s of r)if(s.primitiveName===e.primitiveName){const o=P(s.propertyName);if(a&&a.push({cim:e,nocapPropertyName:o,value:e[o]}),t){let i=!1;for(const p of t)p.primitiveName===e.primitiveName&&(i=!0);i||t.push(s)}s.value!=null&&(e[o]=s.value)}}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const s of e.effects)n.applyOverrides(s,r,t,a);if(e.symbolLayers)for(const s of e.symbolLayers)n.applyOverrides(s,r,t,a);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const s of e.effects)n.applyOverrides(s,r,t,a);if(e.type==="CIMVectorMarker"&&e.markerGraphics)for(const s of e.markerGraphics)n.applyOverrides(s,r,t,a),n.applyOverrides(s.symbol,r,t,a)}}static restoreOverrides(e){for(const r of e)r.cim[r.nocapPropertyName]=r.value}static buildOverrideKey(e){let r="";for(const t of e)t.value!==void 0&&(r+=`${t.primitiveName}${t.propertyName}${JSON.stringify(t.value)}`);return r}static toValue(e,r){if(e==="DashTemplate")return r.split(" ").map(t=>Number(t));if(e==="Color"){const t=new T(r).toRgba();return t[3]*=255,t}return r}}n._expressionToRenderExpression=new Map;const H=Object.freeze(Object.defineProperty({__proto__:null,OverrideHelper:n},Symbol.toStringTag,{value:"Module"}));export{H as O,V as c,n as y};
