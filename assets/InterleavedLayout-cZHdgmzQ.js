import{u as p,m as _,i as y,T as m,c as F,h as g,l as w,a as $,p as b,b as E,x as v,y as A,o as M,d as T,g as x,j as z,V as B,q as C,A as L,L as U,B as k,O,w as V,E as j,F as D,I as G,U as S,M as q,S as J,k as K,v as N,z as P,C as Q,D as R,G as W,H as X}from"./BufferView-BiOAu-8t.js";import{e as c}from"./types-D0PSWh4d.js";import{gj as Y}from"./index-CdyqwYB1.js";class Z{constructor(t){this.message=t}toString(){return`AssertException: ${this.message}`}}function tt(i,t="Assertion"){if(!i){const e=new Error(t).stack;throw new Z(`${t} at ${e}`)}}function ht(i,t){i||(t=t||"",console.warn("Verify failed: "+t+`
`+new Error("verify").stack))}function ut(i,t,e,r){let s,n=(e[0]-i[0])/t[0],h=(r[0]-i[0])/t[0];n>h&&(s=n,n=h,h=s);let f=(e[1]-i[1])/t[1],u=(r[1]-i[1])/t[1];if(f>u&&(s=f,f=u,u=s),n>u||f>h)return!1;f>n&&(n=f),u<h&&(h=u);let o=(e[2]-i[2])/t[2],d=(r[2]-i[2])/t[2];return o>d&&(s=o,o=d,d=s),!(n>d||o>h)&&(d<h&&(h=d),!(h<0))}function ft(i,t,e,r,s,n=Y()){const h=(r[s]-e[s])*(t[0]-i[0])-(r[0]-e[0])*(t[s]-i[s]),f=(r[0]-e[0])*(i[s]-e[s])-(r[s]-e[s])*(i[0]-e[0]);if(h===0)return!1;const u=f/h;return n[0]=i[0]+u*(t[0]-i[0]),n[1]=i[s]+u*(t[s]-i[s]),!0}function dt(i,t){return Math.log(i)/Math.log(t)}function ot(i){return i[0]===1&&i[1]===0&&i[2]===0&&i[3]===0&&i[4]===0&&i[5]===1&&i[6]===0&&i[7]===0&&i[8]===0&&i[9]===0&&i[10]===1&&i[11]===0&&i[15]===1}class a{constructor(t,e){this.layout=t,this.buffer=typeof e=="number"?new ArrayBuffer(e*t.stride):e;for(const r of t.fields.keys()){const s=t.fields.get(r);this[r]=new s.constructor(this.buffer,s.offset,this.stride)}}get stride(){return this.layout.stride}get count(){return this.buffer.byteLength/this.stride}get byteLength(){return this.buffer.byteLength}getField(t,e){const r=this[t];return r&&r.elementCount===e.ElementCount&&r.elementType===e.ElementType?r:null}slice(t,e){return new a(this.layout,this.buffer.slice(t*this.stride,e*this.stride))}copyFrom(t,e=0,r=0,s=t.count){const n=this.stride;if(n%4==0){const h=new Uint32Array(t.buffer,e*n,s*n/4);new Uint32Array(this.buffer,r*n,s*n/4).set(h)}else{const h=new Uint8Array(t.buffer,e*n,s*n);new Uint8Array(this.buffer,r*n,s*n).set(h)}return this}get cachedMemory(){return this.byteLength}dispose(){}}class l{constructor(t){this._stride=0,this._lastAligned=0,this._fields=new Map,t&&(this._stride=t.stride,t.fields.forEach(e=>this._fields.set(e[0],{...e[1],constructor:it(e[1].constructor)})))}freeze(){return this}vec2f(t,e){return this._appendField(t,p,e),this}vec2f64(t,e){return this._appendField(t,_,e),this}vec3f(t,e){return this._appendField(t,y,e),this}vec3f64(t,e){return this._appendField(t,m,e),this}vec4f(t,e){return this._appendField(t,F,e),this}vec4f64(t,e){return this._appendField(t,g,e),this}mat3f(t,e){return this._appendField(t,w,e),this}mat3f64(t,e){return this._appendField(t,$,e),this}mat4f(t,e){return this._appendField(t,b,e),this}mat4f64(t,e){return this._appendField(t,E,e),this}vec4u8(t,e){return this._appendField(t,v,e),this}f32(t,e){return this._appendField(t,A,e),this}f64(t,e){return this._appendField(t,M,e),this}u8(t,e){return this._appendField(t,T,e),this}u16(t,e){return this._appendField(t,x,e),this}i8(t,e){return this._appendField(t,z,e),this}vec2i8(t,e){return this._appendField(t,B,e),this}vec2i16(t,e){return this._appendField(t,C,e),this}vec2u8(t,e){return this._appendField(t,L,e),this}vec4u16(t,e){return this._appendField(t,U,e),this}u32(t,e){return this._appendField(t,k,e),this}_appendField(t,e,r){if(this._fields.has(t))return void tt(!1,`${t} already added to vertex buffer layout`);const s=e.ElementCount*c(e.ElementType),n=this._stride;this._stride+=s,this._fields.set(t,{size:s,constructor:e,offset:n,optional:r})}createBuffer(t){return new a(this,t)}createView(t){return new a(this,t)}clone(){const t=new l;return t._stride=this._stride,t._fields=new Map,this._fields.forEach((e,r)=>t._fields.set(r,e)),t.BufferType=this.BufferType,t}get stride(){if(this._lastAligned!==this._fields.size){let t=1;this._fields.forEach(e=>t=Math.max(t,c(e.constructor.ElementType))),this._stride=Math.floor((this._stride+t-1)/t)*t,this._lastAligned=this._fields.size}return this._stride}get fields(){return this._fields}}function at(){return new l}class lt{constructor(t){this.fields=new Array,t.fields.forEach((e,r)=>{const s={...e,constructor:H(e.constructor)};this.fields.push([r,s])}),this.stride=t.stride}}const et=[A,p,y,F,w,b,M,_,m,g,$,E,T,L,O,v,x,V,j,U,k,D,G,S,z,B,q,J,K,C,N,P,Q,R,W,X];function H(i){return`${i.ElementType}_${i.ElementCount}`}function it(i){return I.get(i)}const I=new Map;et.forEach(i=>I.set(H(i),i));export{l as G,at as H,lt as I,ht as c,ft as f,ut as i,ot as m,tt as s,dt as u};
