const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/editingSupport-CNBp2NXa.js","assets/index-CdyqwYB1.js","assets/index-CxJz3tXl.css","assets/EditBusLayer-CrTbG9mC.js","assets/infoFor3D-dHKPbXlj.js","assets/Mesh-DUZEN14j.js","assets/axisAngleDegrees-Dgi7-80E.js","assets/quat-RO2z-Ojv.js","assets/mat3f64-q3fE-ZOt.js","assets/quatf64-aQ5IuZRd.js","assets/MeshComponent-DXzLQiAE.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshLocalVertexSpace-v_Brcy1u.js","assets/MeshTransform-Dn54nHH6.js","assets/mat4f64-Dk4dwAN8.js","assets/MeshVertexAttributes-DyWd8dBK.js","assets/meshVertexSpaceUtils-CVwVUWgR.js","assets/triangulationUtils-DaHPKAeV.js","assets/earcut-D9gy186-.js","assets/Indices-BgUwEYPx.js","assets/plane-BsHZw3wS.js","assets/deduplicate-6sgWbjcR.js","assets/projectPointToVector-BfRT1cTN.js","assets/vertexSpaceConversion-CdFOk3l2.js","assets/spatialReferenceEllipsoidUtils-DVLcsc59.js","assets/computeTranslationToOriginAndRotation-i7BoTAqJ.js","assets/vec3-BWGfvdIf.js","assets/BufferView-BiOAu-8t.js","assets/vec4-CTqo31v5.js","assets/External-D-jjQ9UV.js"])))=>i.map(i=>d[i]);
import{B as s,E as a,kn as G,c0 as k,mB as re,F as I,ij as Q,aJ as O,V as C,aA as R,ce as se,aY as J,jS as ie,bH as v,bS as ae,fs as oe,c_ as ne,as as X,H as le,b as u,cV as pe,_ as q,f8 as de,eZ as ue,e_ as ce,cP as ye,e$ as fe,f9 as he,fa as me,bF as ge,cQ as we,c9 as ve,kX as be,dz as Ie,kb as Le,ih as z,A as m,aZ as Fe,bw as Se,mC as _e,J as Te,ii as $e,bN as M,mD as Ee,b1 as Oe,i7 as H,bV as D,y as xe,i8 as je,mE as Ae,mF as Pe,ik as Re,fe as De,io as qe,il as K,im as Ne,f1 as Ue,mG as Ce,iq as Ve,ip as Ge,c5 as ke,is as Qe,mH as Je}from"./index-CdyqwYB1.js";import{i as ze,m as Me,a as He}from"./meshSpatialReferenceScaleUtils-rd8gyfPj.js";import{F as Ke}from"./EditBusLayer-CrTbG9mC.js";import{R as We,V as W}from"./SceneService-Bo-745sM.js";import{s as Ze}from"./associatedFeatureServiceUtils-C7NKHMWF.js";import{t as Be}from"./capabilities-B4c8vV3b.js";import{p as ee,a as Ye,y as Xe,m as et}from"./I3SLayerDefinitions-yaeu8aA4.js";import{r as tt,n as rt}from"./infoFor3D-dHKPbXlj.js";import{p as st}from"./LayerFloorInfo-DwdsiYy5.js";import{a as it}from"./lazyLayerLoader-BMGYT9dZ.js";import{v as at}from"./persistable-C_u7MDoj.js";import{t as ot}from"./styleUtils-B1K7dr4M.js";import{$ as Z,P as nt,w as lt}from"./elevationInfoUtils-BpUmPsgP.js";import{V as pt}from"./I3SUtil-B5ZtVNWI.js";import{n as dt,p as ut}from"./popupUtils-Dol2Yog4.js";import"./MeshTransform-Dn54nHH6.js";import"./mat4f64-Dk4dwAN8.js";import"./quat-RO2z-Ojv.js";import"./mat3f64-q3fE-ZOt.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-Dgi7-80E.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceUtils-DZQ6uDzg.js";import"./resourceUtils-CVcik0Ch.js";import"./saveUtils-C4qLftUE.js";import"./resourceExtension-B9CUa6xq.js";import"./projectVectorToVector-CVuZv1VI.js";import"./projectPointToVector-BfRT1cTN.js";import"./sphere-Ca7bupzT.js";import"./plane-BsHZw3wS.js";import"./I3SBinaryReader-ehraAgQu.js";import"./VertexAttribute-Cq4MnHjR.js";import"./edgeUtils-DohCTMxR.js";import"./floatRGBA-Bxcxs9Ey.js";import"./NormalAttribute.glsl-Cj5_4TyA.js";import"./glsl-BH37Aalp.js";import"./ShaderOutput-DnYY5J1_.js";import"./BindType-BBwFZqyN.js";import"./orientedBoundingBox-CwLDXj5p.js";import"./spatialReferenceEllipsoidUtils-DVLcsc59.js";import"./computeTranslationToOriginAndRotation-i7BoTAqJ.js";function te({associatedLayer:e,serviceUpdateTimeStamp:r}){var d;const t=(d=e==null?void 0:e.editingInfo)==null?void 0:d.lastEditDate,i=e==null?void 0:e.serverGens,n=t!=null,l=r!=null,p=n&&l&&r.lastUpdate!==t.getTime();return n&&(p||!l&&(i==null?void 0:i.minServerGen)!==(i==null?void 0:i.serverGen))}const ct=e=>{let r=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var n;const t=(n=this.associatedLayer)==null?void 0:n.timeInfo;if(t==null)return null;const i=t.clone();return Q(i,this.fieldsIndex),i}set timeInfo(t){Q(t,this.fieldsIndex),this._override("timeInfo",t)}get timeExtent(){var t;return(t=this.associatedLayer)==null?void 0:t.timeExtent}set timeExtent(t){this._override("timeExtent",t)}get timeOffset(){var t;return(t=this.associatedLayer)==null?void 0:t.timeOffset}set timeOffset(t){this._override("timeOffset",t)}get datesInUnknownTimezone(){var t;return((t=this.associatedLayer)==null?void 0:t.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(t){this._override("datesInUnknownTimezone",t)}async loadTimeInfoFromService(t){const{serviceTimeInfo:i}=this;if(i==null)return;const{startTimeField:n,endTimeField:l}=i;if(n==null&&l==null||te({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const p=async h=>{var _;let c=null;try{const L=await((_=this.fetchStatistics)==null?void 0:_.call(this,h,t));c=L==null?void 0:L.stats}catch{}if(c==null)return null;const{minTimeStr:w,min:x,maxTimeStr:j,max:A}=c,S=h===n?w??x:j??A;return S!=null?new Date(S):null},[d,y]=await Promise.all([p(n),p(l)]);if(n!=null&&d==null||l!=null&&y==null)return;const f=new k({start:d,end:y});this.setAtOrigin("timeInfo",new G({endField:l,startField:n,fullTimeExtent:f}),"service")}};return s([a({type:G,json:{read:!1,write:!1}})],r.prototype,"timeInfo",null),s([a({type:k,json:{read:!1,write:!1}})],r.prototype,"timeExtent",null),s([a({type:re,json:{read:!1,write:!1}})],r.prototype,"timeOffset",null),s([a({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],r.prototype,"datesInUnknownTimezone",null),s([a({type:F,readOnly:!0,json:{read:{source:"timeInfo"}}})],r.prototype,"serviceTimeInfo",void 0),r=s([I("esri.layers.mixins.TemporalSceneLayer")],r),r};let F=class extends O{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};s([a({type:String})],F.prototype,"endTimeField",void 0),s([a({type:String})],F.prototype,"startTimeField",void 0),F=s([I("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],F);let g=class extends O{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};s([a({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"field",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),s([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"type",void 0),g=s([I("esri.layers.support.RangeInfo")],g);var $;let N=$=class extends O.JSONSupportMixin(C.ofType(R)){constructor(e){super(e)}clone(){return new $(this.items.map(e=>e.clone()))}write(e,r){return this.toJSON(r)}toJSON(e){var t,i;const r=(t=e==null?void 0:e.layer)==null?void 0:t.spatialReference;return r?this.toArray().map(n=>{var p;if(!r.equals(n.spatialReference)){if(!se(n.spatialReference,r))return(p=e==null?void 0:e.messages)==null||p.push(new J("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const d=new R;ie(n,d,r),n=d}const l=n.toJSON(e);return delete l.spatialReference,l}).filter(n=>n!=null):((i=e==null?void 0:e.messages)==null||i.push(new J("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(n=>n.toJSON(e)))}static fromJSON(e,r){const t=new $;return e.forEach(i=>t.add(R.fromJSON(i,r))),t}};N=$=s([I("esri.layers.support.PolygonCollection")],N);const E=N;var U;let b=U=class extends O{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new E,this._geometriesSource=null}initialize(){this.addHandles(ae(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,oe))}readGeometries(e,r,t){Array.isArray(e)?this.geometries=E.fromJSON(e,t):this._geometriesSource={url:ne(e,t),context:t}}async loadGeometries(e,r){if(this._geometriesSource==null)return;const{url:t,context:i}=this._geometriesSource,n=await X(t,{responseType:"json",signal:r==null?void 0:r.signal}),l=e.toJSON(),p=n.data.map(d=>({...d,spatialReference:l}));this.geometries=E.fromJSON(p,i),this._geometriesSource=null}clone(){const e=new U({geometries:le(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};s([a({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],b.prototype,"spatialRelationship",void 0),s([a({type:E,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),at({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],b.prototype,"geometries",void 0),s([v(["web-scene","portal-item"],"geometries")],b.prototype,"readGeometries",null),b=U=s([I("esri.layers.support.SceneFilter")],b);const yt=b;async function ft({fieldName:e,statisticsInfo:r,errorContext:t,fieldsIndex:i,path:n,customParameters:l,apiKey:p,signal:d}){if(r==null)throw new u(`${t}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=i.get(e);if(y==null)throw new u(`${t}:field-unexisting`,`Field '${e}' does not exist on the layer`);const f=r.find(w=>w.name===y.name);if(f==null)throw new u(`${t}:no-cached-statistics`,"Cached statistics for this attribute are not available");const h=pe(n,f.href),{data:c}=await X(h,{query:{f:"json",...l,token:p},responseType:"json",signal:d});return c}async function ht(e){const r=[];for(const t of e)t.name.toLowerCase().endsWith(".zip")?r.push(mt(t)):r.push(Promise.resolve(t));return(await Promise.all(r)).flat()}async function mt(e){const{BlobReader:r,ZipReader:t,BlobWriter:i}=await q(()=>import("./zipjs-wrapper-kBbGuXOp.js"),[]),n=[];return(await new t(new r(e)).getEntries()).forEach(p=>{var f;if(p.directory||/^__MACOS/i.test(p.filename))return;const d=new i,y=(f=p.getData)==null?void 0:f.call(p,d).then(h=>new File([h],p.filename));y&&n.push(y)}),Promise.all(n)}const gt=new Set(["3DObject","Point"]),B=Re();let o=class extends ct(Ke(We(de(ue(ce(ye(fe(he(me(ge.ClonableMixin(we))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new C,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}destroy(){this._set("renderer",null),this.associatedLayer=ve(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){var i;const t=((i=this.getField(e))==null?void 0:i.domain)??null;return this.associatedLayer?be(this.associatedLayer,e,r,t):t}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get attributeTableTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.attributeTableTemplate)??null}get fieldsIndex(){return new Ie(this.fields)}readNodePages(e,r,t){return r.layerType==="Point"&&(e=r.pointNodePages),e==null||typeof e!="object"?null:ee.fromJSON(e,t)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Le(this.associatedLayer)}get geometryType(){return wt[this.profile]||"mesh"}set renderer(e){z(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var V;e=e??Be;const{query:r,queryRelated:t,editing:{supportsGlobalId:i,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:p,supportsReturnServiceEditsInSourceSpatialReference:d},data:{supportsZ:y,supportsM:f,isVersioned:h,supportsAttachment:c},operations:{supportsEditing:w,supportsAdd:x,supportsUpdate:j,supportsDelete:A,supportsQuery:S,supportsQueryAttachments:_,supportsAsyncConvert3D:L}}=e,T=e.operations.supportsChangeTracking,P=!!((V=this.associatedLayer)!=null&&V.infoFor3D);return{query:r,queryRelated:t,editing:{supportsGlobalId:i,supportsReturnServiceEditsInSourceSpatialReference:d,supportsRollbackOnFailure:n,supportsGeometryUpdate:P&&p,supportsUploadWithItemId:l},data:{supportsAttachment:c,supportsZ:y,supportsM:f,isVersioned:h},operations:{supportsQuery:S,supportsQueryAttachments:_,supportsEditing:w&&T,supportsAdd:P&&x&&T,supportsDelete:P&&A&&T,supportsUpdate:j&&T,supportsAsyncConvert3D:L}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,r){return!e&&r.fields&&r.fields.some(t=>(t.type==="esriFieldTypeOID"&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,r){return!e&&r.fields&&r.fields.some(t=>(t.type==="esriFieldTypeGlobalID"&&(e=t.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,r){const t=r.store.profile;return t!=null&&Y[t]?Y[t]:(m.getLogger(this).error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const r=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Fe),await this._fetchService(r),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,r),this._setAssociatedFeatureLayer(r),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await ot(this,{origin:"service"},r),z(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new Se;return this.geometryType==="mesh"?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryExtent(e||this.createQuery(),r))}queryFeatureCount(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatureCount(e||this.createQuery(),r))}queryFeatures(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatures(e||this.createQuery(),r)).then(t=>{if(t!=null&&t.features)for(const i of t.features)i.layer=this,i.sourceLayer=this;return t})}async queryRelatedFeatures(e,r){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,r)}async queryRelatedFeaturesCount(e,r){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,r)}async queryCachedAttributes(e,r){var i;const t=_e(this.fieldsIndex,await dt(this,ut(this)));return pt(((i=this.parsedUrl)==null?void 0:i.path)??"",this.attributeStorageInfo??[],e,r,t,this.apiKey,this.customParameters)}async queryCachedFeature(e,r){const t=await this.queryCachedAttributes(e,[r]);if(!t||t.length===0)throw new u("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new Te;return i.attributes=t[0],i.layer=this,i.sourceLayer=this,i}queryObjectIds(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryObjectIds(e||this.createQuery(),r))}queryAttachments(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryAttachments(e,r))}getFieldUsageInfo(e){const r={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||r:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),r)}createPopupTemplate(e){return $e(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new u("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(r=>r.name===e)}async queryCachedStatistics(e,r){return await this.load(r),await this.fetchStatistics(e,r)}async saveAs(e,r){return this._debouncedSaveOperations(W.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(W.SAVE,e)}async applyEdits(e,r){const{applyEdits:t}=await q(()=>import("./editingSupport-CNBp2NXa.js"),__vite__mapDeps([0,1,2,3,4]));let i=r;await this.load();const n=this.associatedLayer;if(!n)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,p=!!n.infoFor3D,d=(i==null?void 0:i.globalIdUsed)??!0;if(p&&l==null)throw new u(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(p&&!d)throw new u(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return M(n.url)&&p&&e.deleteFeatures!=null&&l!=null&&(i={...i,globalIdToObjectId:await Ee(n,e.deleteFeatures,l)}),t(this,n.source,e,i)}async uploadAssets(e,r){if(await this.load(),this.associatedLayer==null)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,r)}on(e,r){return super.on(e,r)}async convertMesh(e,r){r??(r={});const t=c=>{throw m.getLogger(this).error(".convertMesh()",c.message),c};await this.load(),this.infoFor3D||t(new u("invalid:layer","SceneLayer has no capability for mesh conversion"));const i=await this.extractAndFilterFiles(e),n=i.reduce((c,w)=>tt(this.infoFor3D,w)?c+1:c,0);n===0&&t(new ze),n>1&&t(new Me);const l=this.spatialReference,p=r.location??new Oe({x:0,y:0,z:0,spatialReference:l}),d=p.spatialReference.isGeographic?"local":"georeferenced",{default:y}=await q(async()=>{const{default:c}=await import("./Mesh-DUZEN14j.js");return{default:c}},__vite__mapDeps([5,1,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,4])),f=y.createWithExternalSource(p,i,{vertexSpace:d,transform:He(p.spatialReference),unitConversionDisabled:!0}),[h]=await this.uploadAssets([f],{...r,useAssetOrigin:!r.location});return h}async extractAndFilterFiles(e){await this.load();const r=this.infoFor3D;return r?(await ht(e)).filter(t=>rt(r,t)):e}validateLayer(e){if(e.layerType&&!gt.has(e.layerType))throw new u("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new u("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new u("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function r(t,i){let n=!1,l=!1;if(t==null)n=!0,l=!0;else{const p=i&&i.isGeographic;switch(t){case"east-north-up":case"earth-centered":n=!0,l=p;break;case"vertex-reference-frame":n=!0,l=!p;break;default:n=!1}}if(!n)throw new u("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new u("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}r(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new u("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,r,t;if(this._fieldUsageInfo={},this.fields)for(const i of this.fields){const n=!!((e=this.attributeStorageInfo)!=null&&e.some(d=>d.name===i.name)),l=!!((t=(r=this.associatedLayer)==null?void 0:r.fields)!=null&&t.some(d=>d&&i.name===d.name)),p={supportsLabelingInfo:n,supportsRenderer:n,supportsPopupTemplate:n||l,supportsLayerQuery:l};this._fieldUsageInfo[i.name]=p}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var r;if(!((r=this.associatedLayer)!=null&&r.fields))return;let e=null;for(const t of this.associatedLayer.fields){const i=this.getField(t.name);i?(!i.domain&&t.domain&&(i.domain=t.domain.clone()),i.editable=t.editable,i.nullable=t.nullable,i.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],r=H(this);for(let t=0;t<e.length;t++){const i=e[t],n=this.originIdOf(i),l=this.associatedLayer.originIdOf(i);n<l&&(l===D.SERVICE||l===D.PORTAL_ITEM)&&r.setAtOrigin(i,this.associatedLayer[i],l)}}_applyAssociatedLayerExtentOverride(){var r,t,i;const e=(r=this.associatedLayer)==null?void 0:r.getAtOrigin("fullExtent","service");((t=this.associatedLayer)==null?void 0:t.infoFor3D)==null||!e||!M((i=this.associatedLayer)==null?void 0:i.url)||!te(this)||H(this).setAtOrigin("fullExtent",e.clone(),D.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:r,layerId:t,portalItem:i}=await Ze(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await it.FeatureLayer();this.associatedLayer=new n({url:r,customParameters:this.customParameters,layerId:t,portalItem:i}),await this.associatedLayer.load()}catch(r){xe(r)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await je(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&Z(m.getLogger(this),nt("Mesh scene layers","relative-to-scene",e)),Z(m.getLogger(this),lt("Scene layers",e))}async fetchStatistics(e,r){var t;return await ft({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((t=this.parsedUrl)==null?void 0:t.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:r==null?void 0:r.signal})}};s([a({types:{key:"type",base:Pe,typeMap:{selection:Ae}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),s([a({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),s([a({json:{read:!1}})],o.prototype,"associatedLayer",void 0),s([a({type:["show","hide"]})],o.prototype,"listMode",void 0),s([a({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),s([a({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),s([a({...B.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),s([a()],o.prototype,"types",null),s([a()],o.prototype,"typeIdField",null),s([a()],o.prototype,"templates",null),s([a()],o.prototype,"formTemplate",null),s([a()],o.prototype,"attributeTableTemplate",null),s([a({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),s([a({type:st,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),s([a(B.outFields)],o.prototype,"outFields",void 0),s([a({type:ee,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),s([v("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),s([a({type:[Ye],readOnly:!0})],o.prototype,"materialDefinitions",void 0),s([a({type:[Xe],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),s([a({type:[et],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),s([a({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),s([a({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),s([a({readOnly:!0})],o.prototype,"statisticsInfo",void 0),s([a({type:C.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),s([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),s([a({type:yt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a(De)],o.prototype,"elevationInfo",null),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),s([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([a({type:String})],o.prototype,"geometryType",null),s([a(qe)],o.prototype,"labelsVisible",void 0),s([a({type:[Ne],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:K},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:K},write:!0}})],o.prototype,"labelingInfo",void 0),s([a(Ue)],o.prototype,"legendEnabled",void 0),s([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,r){var i,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const t=(n=(i=r.layerDefinition)==null?void 0:i.drawingInfo)==null?void 0:n.transparency;return t!==void 0?Ce(t):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),s([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),s([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),s([a({types:Ve,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),s([a({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),s([v("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),s([a({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),s([a(Ge)],o.prototype,"popupEnabled",void 0),s([a({type:ke,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),s([a({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),s([v("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),s([a({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),s([v("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),s([a({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),s([a({type:String,json:{read:!1}})],o.prototype,"profile",void 0),s([v("service","profile",["store.profile"])],o.prototype,"readProfile",null),s([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),s([a(Qe)],o.prototype,"screenSizePerspectiveEnabled",void 0),s([a({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),s([a(Je)],o.prototype,"useViewTime",null),o=s([I("esri.layers.SceneLayer")],o);const Y={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},wt={"mesh-pyramids":"mesh",points:"point"},lr=o;export{lr as default};
