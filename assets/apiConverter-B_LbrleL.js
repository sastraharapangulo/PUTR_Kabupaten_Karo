import{a as m,e as M}from"./Transformation2D-B_tst7So.js";import{r as V,C as w,e as h,M as P,U as Z}from"./ProjectionTransformation-D1sWtOKI.js";import{a$ as v,b0 as R,b1 as p,aA as d,az as E}from"./index-D805BexR.js";import{fromGeometryToGXGeometry as g,toGeometry as y}from"./jsonConverter-H7Y8MF-2.js";import"./SimpleGeometryCursor-B92kdZ15.js";const a="_gxVersion",C=2,x=1;function J(t){return Array.isArray(t)?t[0].spatialReference:t.spatialReference}function O(t){switch(t.type){case"point":return X(t);case"multipoint":return G(t);case"polyline":return $(t);case"polygon":return Y(t);case"extent":return z(t);default:throw new Error(`Unsupported geometry type: ${t.type}`)}}function z(t){if(!t.getCacheValue(a)){const e=new V;e.setCoords(t.xmin,t.ymin,t.xmax,t.ymax),t.hasM&&e.setInterval(C,0,t.mmin,t.mmax),t.hasZ&&e.setInterval(x,0,t.zmin,t.zmax),t.setCacheValue(a,e)}return t.getCacheValue(a)}function G(t){if(!t.getCacheValue(a)){const e=new w,n=new h,s=t.points,r=t.hasM,o=t.hasZ,i=o?3:2;for(let u=0,l=s.length;u<l;u++){const c=s[u];n.setXYCoords(c[0],c[1]),o&&n.setZ(c[2]??0),r&&n.setM(c[i]??NaN),e.add(n)}t.setCacheValue(a,e)}return t.getCacheValue(a)}function X(t){if(!t.getCacheValue(a)){const e=new h;e.setXYCoords(t.x,t.y),t.hasM&&e.setM(t.m),t.hasZ&&e.setZ(t.z),t.setCacheValue(a,e)}return t.getCacheValue(a)}function Y(t){if(!t.getCacheValue(a)){const{curveRings:e,hasM:n,hasZ:s,rings:r}=t,o=g({curveRings:e,hasM:n,hasZ:s,rings:r});t.setCacheValue(a,o)}return t.getCacheValue(a)}function $(t){if(!t.getCacheValue(a)){const{curvePaths:e,hasM:n,hasZ:s,paths:r}=t,o=g({curvePaths:e,hasM:n,hasZ:s,paths:r});t.setCacheValue(a,o)}return t.getCacheValue(a)}function T(t){if(t.wkid)return P(t.wkid);const e=t.wkt2||t.wkt;return e?Z(e):null}function B(t,e){if(t)switch(t.getGeometryType()){case m.enumPoint:return N(t,e);case m.enumEnvelope:return k(t,e);case m.enumMultiPoint:return I(t,e);case m.enumPolyline:return j(t,e);case m.enumPolygon:return S(t,e)}return null}function k(t,e){if(t.isEmpty())return null;const n=new v({xmin:t.getXMin(),ymin:t.getYMin(),xmax:t.getXMax(),ymax:t.getYMax(),spatialReference:e}),s=t.getDescription();if(s.hasM()){const r=t.queryInterval(C,0);n.mmin=r.vmin,n.mmax=r.vmax}if(s.hasZ()){const r=t.queryInterval(x,0);n.zmin=r.vmin,n.zmax=r.vmax}return n.setCacheValue(a,t),n}function I(t,e){if(t.isEmpty())return null;const n=t.getDescription(),s=n.hasM(),r=n.hasZ(),o=[],i=new h;for(let l=0,c=t.getPointCount();l<c;l++){t.getPointByVal(l,i);const f=[i.getX(),i.getY()];r&&f.push(i.getZ()),s&&f.push(i.getM()),o.push(f)}const u=new R({hasM:s,hasZ:r,points:o,spatialReference:e});return u.setCacheValue(a,t),u}function N(t,e){if(t instanceof M)return new p({x:t.x,y:t.y,spatialReference:e});if(t.isEmpty())return null;const n=new p({x:t.getX(),y:t.getY(),spatialReference:e}),s=t.getDescription();return s.hasM()&&(n.m=t.getM()),s.hasZ()&&(n.z=t.getZ()),n.setCacheValue(a,t),n}function S(t,e){if(t.isEmpty())return null;const n=d.fromJSON({spatialReference:e,...y(t,null)});return n.setCacheValue(a,t),n}function j(t,e){if(t.isEmpty())return null;const n=E.fromJSON({spatialReference:e,...y(t,null)});return n.setCacheValue(a,t),n}export{z as fromExtent,O as fromGeometry,G as fromMultipoint,X as fromPoint,Y as fromPolygon,$ as fromPolyline,T as fromSpatialReference,J as getSpatialReference,k as toExtent,B as toGeometry,I as toMultipoint,N as toPoint,S as toPolygon,j as toPolyline};
