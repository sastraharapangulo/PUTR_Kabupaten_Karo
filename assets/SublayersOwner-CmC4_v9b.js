const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/FeatureLayer-C7suNIqd.js","assets/index-D805BexR.js","assets/index-DsnHzo1r.css","assets/FeatureLayerBase-r2XOKsjK.js","assets/LayerFloorInfo-Bb0jzCDH.js","assets/Relationship-C_n-JFK5.js","assets/serviceCapabilitiesUtils-Doq4nAXp.js","assets/infoFor3D-dHKPbXlj.js","assets/editsZScale-upTKWkSl.js","assets/queryZScale-f5biojS7.js","assets/EditBusLayer-Zxg-2J8D.js","assets/FeatureType-CWyatfcF.js","assets/TitleCreator-CvXbdi7P.js","assets/versionUtils-DM2EnPDJ.js","assets/styleUtils-CGyLIvbc.js","assets/interfaces-CL2NbQte.js"])))=>i.map(i=>d[i]);
import{B as a,E as n,bH as I,a$ as Z,f0 as ie,ip as se,ax as Y,F as B,jT as ae,jU as U,aX as J,bV as u,cV as H,as as M,d as W,fu as oe,e$ as le,eX as ne,hX as ue,b,bv as pe,dz as ye,jV as de,aQ as ce,ih as he,d3 as fe,A as x,jW as $,c1 as be,V as k,fL as me,i7 as A,ii as ge,bw as Se,_ as Ie,H as T,jO as we,jX as ve,cE as Ee,jY as Le,eq as N,bk as xe,fA as q,im as Oe,bI as L,jZ as Fe,jJ as Te,c5 as _e,iq as De,ir as Pe,j_ as K,ay as G,fM as Ae,fk as O,cG as je,c3 as X,fs as z,ft as qe}from"./index-D805BexR.js";import{F as Ce}from"./QueryTask-DM_JbPus.js";import{c as Ve}from"./FeatureType-CWyatfcF.js";import{p as Re}from"./LayerFloorInfo-Bb0jzCDH.js";import{p as Me}from"./Relationship-C_n-JFK5.js";import{c as $e}from"./serviceCapabilitiesUtils-Doq4nAXp.js";import{o as Ne}from"./sublayerUtils-DHda7QA7.js";const ze=r=>{let t=class extends r{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,i){const s=i.capabilities&&i.capabilities.split(",").map(re=>re.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const o=this.type,p=o!=="tile"&&!!i.supportsDynamicLayers,y=s.includes("query"),d=s.includes("map"),f=!!i.exportTilesAllowed,m=s.includes("tilemap"),c=s.includes("data"),g=o!=="tile"&&(!i.tileInfo||p),S=o!=="tile"&&(!i.tileInfo||p),h=o!=="tile",w=o!=="tile"&&p&&i.currentVersion>=11.1,v=i.cimVersion?ae.parse(i.cimVersion):null,F=(v==null?void 0:v.greaterEqual(1,4))??!1,te=(v==null?void 0:v.greaterEqual(2,0))??!1;return{operations:{supportsExportMap:d,supportsExportTiles:f,supportsIdentify:y,supportsQuery:c,supportsTileMap:m},exportMap:d?{supportsArcadeExpressionForLabeling:F,supportsCIMSymbols:te,supportsDynamicLayers:p,supportsSublayerOrderBy:w,supportsSublayerDefinitionExpression:S,supportsSublayerVisibility:g,supportsSublayersChanges:h}:null,exportTiles:f?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(e,i){let s=i.currentVersion;return s||(s=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchRelatedService(e){const i=this.portalItem;if(!i||!U(i))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=i.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then(o=>o.find(p=>p.type==="Feature Service")??null,()=>null));const s=await this._relatedFeatureServicePromise;return J(e),s?{itemId:s.id,url:s.url}:null}async fetchSublayerInfo(e,i){var y;const{source:s}=e;if(this!=null&&this.portalItem&&this.type==="tile"&&(s==null?void 0:s.type)==="map-layer"&&U(this.portalItem)&&e.originIdOf("url")<u.SERVICE){const d=await this.fetchRelatedService(i);d&&(e.url=H(d.url,s.mapLayerId.toString()),e.layerItemId=d.itemId)}const{url:o}=e;let p;if(s.type==="data-layer")p=(await M(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...i})).data;else if(o&&e.originIdOf("url")>u.SERVICE)try{const d=await this._fetchAllLayersAndTablesFromService(o),f=((y=W(o))==null?void 0:y.sublayer)??s.mapLayerId;p=d.get(f)}catch{}else{let d=e.id;(s==null?void 0:s.type)==="map-layer"&&(d=s.mapLayerId);try{p=(await this.fetchAllLayersAndTables(i)).get(d)}catch{}}return p}async fetchAllLayersAndTables(e){var i;return this._fetchAllLayersAndTablesFromService((i=this.parsedUrl)==null?void 0:i.path,e)}async _fetchAllLayersAndTablesFromService(e,i){await this.load(i),this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const s=W(e),o=oe(this._allLayersAndTablesMap,s==null?void 0:s.url.path,()=>M(H(s==null?void 0:s.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(y=>{const d=new Map,{layers:f,tables:m}=y.data,c=[...f??[],...m??[]];for(const g of c)d.set(g.id,g);return{result:d}},y=>({error:y}))),p=await o;if(J(i),"result"in p)return p.result;throw p.error}};return a([n({readOnly:!0})],t.prototype,"capabilities",void 0),a([I("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),a([n({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),a([n({type:Z})],t.prototype,"fullExtent",void 0),a([n(ie)],t.prototype,"id",void 0),a([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),a([n(se)],t.prototype,"popupEnabled",void 0),a([n({type:Y})],t.prototype,"spatialReference",void 0),a([n({readOnly:!0})],t.prototype,"version",void 0),a([I("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=a([B("esri.layers.mixins.ArcGISMapService")],t),t};var j;function C(r){return(r==null?void 0:r.type)==="esriSMS"}function V(r,t,e){var s;const i=this.originIdOf(t)>=O(e.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!e&&((s=e.layer)==null?void 0:s.type)==="map-image"&&(e.writeSublayerStructure||i)}}function R(r,t,e){var i;return{enabled:!!e&&((i=e.layer)==null?void 0:i.type)==="tile"&&(e.origin&&this.originIdOf(t)>=O(e.origin)||this._isOverridden(t))}}function E(r,t,e){return{ignoreOrigin:!0,enabled:e&&e.writeSublayerStructure||!1}}function _(r,t,e){return{ignoreOrigin:!0,enabled:!!(e!=null&&e.writeSublayerStructure)&&this.originIdOf(t)>u.SERVICE}}function D(r,t,e){return{ignoreOrigin:!0,enabled:!!e&&(e.writeSublayerStructure||this.originIdOf(t)>=O(e.origin))}}let Be=0;const ke=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);let l=j=class extends le(ne.IdentifiableMixin(ue)){constructor(r){super(r),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(r){return this.addResolvingPromise((async()=>{const{layer:t,url:e}=this;if(!t&&!e)throw new b("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,r):(await M(e,{responseType:"json",query:{f:"json"},...r})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:pe(e)}))})()),this}readCapabilities(r,t){t=t.layerDefinition||t;const{attachment:e,operations:{supportsQuery:i,supportsQueryAttachments:s},query:{supportsFormatPBF:o,supportsOrderBy:p,supportsPagination:y},data:{supportsAttachment:d},queryRelated:f}=$e(t,this.url);return{attachment:{supportsOrderByFields:(e==null?void 0:e.supportsOrderByFields)??!1,supportsResize:(e==null?void 0:e.supportsResize)??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:s},data:{supportsAttachment:d},query:{supportsFormatPBF:o,supportsOrderBy:p,supportsPagination:y},queryRelated:f}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(r){this._setAndNotifyLayer("definitionExpression",r)}get effectiveScaleRange(){const{minScale:r,maxScale:t}=this;return{minScale:r,maxScale:t}}readMaxScaleRange(r,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new ye(this.fields||[])}set floorInfo(r){this._setAndNotifyLayer("floorInfo",r)}readGlobalIdFieldFromService(r,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields){for(const e of t.fields)if(e.type==="esriFieldTypeGlobalID")return e.name}}get id(){return this._get("id")??Be++}set id(r){var t,e,i;this._get("id")!==r&&(((i=(e=(t=this.layer)==null?void 0:t.capabilities)==null?void 0:e.exportMap)==null?void 0:i.supportsDynamicLayers)!==!1?this._set("id",r):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(r,t){return t.type==="Table"}set labelingInfo(r){this._setAndNotifyLayer("labelingInfo",r)}writeLabelingInfo(r,t,e,i){r&&r.length&&(t.layerDefinition={drawingInfo:{labelingInfo:r.map(s=>s.write({},i))}})}set labelsVisible(r){this._setAndNotifyLayer("labelsVisible",r)}set layer(r){var t;this._set("layer",r),(t=this.sublayers)==null||t.forEach(e=>e.layer=r)}set listMode(r){this._set("listMode",r)}set minScale(r){this._setAndNotifyLayer("minScale",r)}readMinScale(r,t){var e;return t.minScale||((e=t.layerDefinition)==null?void 0:e.minScale)||0}set maxScale(r){this._setAndNotifyLayer("maxScale",r)}readMaxScale(r,t){var e;return t.maxScale||((e=t.layerDefinition)==null?void 0:e.maxScale)||0}readObjectIdFieldFromService(r,t){var i;if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;const e=(i=t.fields)==null?void 0:i.find(s=>s.type==="esriFieldTypeOID");return e==null?void 0:e.name}set opacity(r){this._setAndNotifyLayer("opacity",r)}readOpacity(r,t){var i;const{layerDefinition:e}=t;return 1-.01*((e==null?void 0:e.transparency)??((i=e==null?void 0:e.drawingInfo)==null?void 0:i.transparency)??0)}writeOpacity(r,t,e,i){t.layerDefinition={drawingInfo:{transparency:100-100*r}}}set orderBy(r){this._setAndNotifyLayer("orderBy",r)}writeParent(r,t){this.parent&&this.parent!==this.layer?t.parentLayerId=de(this.parent.id):t.parentLayerId=-1}get queryTask(){var y;if(!this.layer)return null;const{capabilities:r,fieldsIndex:t,layer:e,url:i}=this,{spatialReference:s}=e,o="gdbVersion"in e?e.gdbVersion:void 0,p=ce("featurelayer-pbf")&&(r==null?void 0:r.query.supportsFormatPBF);return new Ce({fieldsIndex:t,gdbVersion:o,pbfSupported:p,queryAttachmentsSupported:((y=r==null?void 0:r.operations)==null?void 0:y.supportsQueryAttachments)??!1,sourceSpatialReference:s,url:i})}set renderer(r){if(he(r,this.fieldsIndex),r){for(const t of r.symbols)if(fe(t)){x.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",r)}get source(){return this._get("source")||new $({mapLayerId:this.id})}set source(r){this._setAndNotifyLayer("source",r)}set sublayers(r){this._handleSublayersChange(r,this._get("sublayers")),this._set("sublayers",r)}castSublayers(r){return be(k.ofType(j),r)}writeSublayers(r,t,e){var i;(i=this.sublayers)!=null&&i.length&&(t[e]=this.sublayers.map(s=>s.id).toArray().reverse())}readTitle(r,t){var e;return((e=t.layerDefinition)==null?void 0:e.name)??t.name}readTypeIdField(r,t){let e=(t=t.layerDefinition||t).typeIdField;if(e&&t.fields){e=e.toLowerCase();const i=t.fields.find(s=>s.name.toLowerCase()===e);i&&(e=i.name)}return e}get url(){var i;const r=((i=this.layer)==null?void 0:i.parsedUrl)??this._lastParsedUrl,t=this.source;if(!r)return null;if(this._lastParsedUrl=r,(t==null?void 0:t.type)==="map-layer")return`${r.path}/${t.mapLayerId}`;const e={layer:JSON.stringify({source:this.source})};return`${r.path}/dynamicLayer?${me(e)}`}set url(r){this._overrideIfSome("url",r)}set visible(r){this._setAndNotifyLayer("visible",r)}writeVisible(r,t,e,i){t[e]=this.getAtOrigin("defaultVisibility","service")||r}clone(){const{store:r}=A(this),t=new j;return A(t).store=r.clone(ke),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(r){return ge(this,r)}createQuery(){return new Se({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var s;if(this.hasOwnProperty("sublayers"))return null;const r=(await Ie(async()=>{const{default:o}=await import("./FeatureLayer-C7suNIqd.js");return{default:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]))).default,{layer:t,url:e}=this;let i;if(e&&this.originIdOf("url")>u.SERVICE)i=new r({url:e});else{if(!(t!=null&&t.parsedUrl))throw new b("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const o=t.parsedUrl;i=new r({url:o.path}),o&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return(t==null?void 0:t.refreshInterval)!=null&&(i.refreshInterval=t.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=T(this.floorInfo)),this.originIdOf("labelingInfo")>u.SERVICE&&(i.labelingInfo=T(this.labelingInfo)),this.originIdOf("labelsVisible")>u.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>u.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>u.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>u.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>u.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>u.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>u.DEFAULTS&&(i.popupTemplate=T(this.popupTemplate)),this.originIdOf("renderer")>u.SERVICE&&(i.renderer=T(this.renderer)),((s=this.source)==null?void 0:s.type)==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>u.DEFAULTS&&(i.title=this.title),(t==null?void 0:t.type)==="map-image"&&t.originIdOf("customParameters")>u.DEFAULTS&&(i.customParameters=t.customParameters),(t==null?void 0:t.type)==="tile"&&t.originIdOf("customParameters")>u.DEFAULTS&&(i.customParameters=t.customParameters),i}getField(r){return this.fieldsIndex.get(r)}getFeatureType(r){return we(this.types,this.typeIdField,r)}getFieldDomain(r,t){const e=t==null?void 0:t.feature,i=this.getFeatureType(e);if(i){const s=i.domains&&i.domains[r];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(r)}async queryAttachments(r,t){var m,c,g,S;await this.load(),r=ve.from(r);const e=this.capabilities;if(!((m=e==null?void 0:e.data)!=null&&m.supportsAttachment))throw new b("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:o,num:p,size:y,start:d,where:f}=r;if(!((c=e==null?void 0:e.operations)!=null&&c.supportsQueryAttachments)&&((i==null?void 0:i.length)>0||(o==null?void 0:o.length)>0||(y==null?void 0:y.length)>0||p||d||f))throw new b("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",r);if(!(s!=null&&s.length||o!=null&&o.length||f))throw new b("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",r);return!((g=e==null?void 0:e.attachment)!=null&&g.supportsOrderByFields)&&((S=r.orderByFields)!=null&&S.length)&&((r=r.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(r,t)}async queryFeatureCount(r=this.createQuery(),t){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryFeatureCount:not-supported","this layer has no url.");const e=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeForCount(r,{...t,query:{...(s=this.layer)==null?void 0:s.customParameters,token:e}})}async queryFeatures(r=this.createQuery(),t){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryFeatures:not-supported","this layer has no url.");const e=await this.queryTask.execute(r,{...t,query:{...(i=this.layer)==null?void 0:i.customParameters,token:(s=this.layer)==null?void 0:s.apiKey}});if(e!=null&&e.features)for(const o of e.features)o.sourceLayer=this;return e}async queryObjectIds(r=this.createQuery(),t){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryObjectIds:not-supported","this layer has no url.");const e=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeForIds(r,{...t,query:{...(s=this.layer)==null?void 0:s.customParameters,token:e}})}async queryRelatedFeatures(r,t){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new b("queryRelatedFeatures:not-supported","this layer has no url.");const e=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeRelationshipQuery(r,{...t,query:{...(s=this.layer)==null?void 0:s.customParameters,token:e}})}async queryRelatedFeaturesCount(r,t){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new b("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new b("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new b("queryRelatedFeaturesCount:not-supported","this layer has no url.");const e=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeRelationshipQueryForCount(r,{...t,query:{...(s=this.layer)==null?void 0:s.customParameters,token:e}})}toExportImageJSON(r){var o,p,y,d,f,m;const t={id:this.id,source:((o=this.source)==null?void 0:o.toJSON())||{mapLayerId:this.id,type:"mapLayer"}},e=Ee(r,this.definitionExpression);e!=null&&(t.definitionExpression=e);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((c,g)=>(c[g]=this.originIdOf(g),c),{});if(Object.keys(i).some(c=>i[c]>u.SERVICE)){const c=t.drawingInfo={};if(i.renderer>u.SERVICE&&(c.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>u.SERVICE&&(c.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>u.SERVICE)if(this.labelingInfo){!this.loaded&&((p=this.labelingInfo)!=null&&p.some(S=>!S.labelPlacement))&&x.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let g=this.labelingInfo;this.geometryType!=null&&(g=Le(this.labelingInfo,N.toJSON(this.geometryType))),c.showLabels=!0,c.labelingInfo=g.filter(S=>S.labelPlacement).map(S=>S.toJSON({origin:"service",layer:this.layer}))}else c.showLabels=!1;i.opacity>u.SERVICE&&(c.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(c.renderer)}return(((f=(d=(y=this.layer)==null?void 0:y.capabilities)==null?void 0:d.exportMap)==null?void 0:f.supportsSublayerOrderBy)??!1)&&this.originIdOf("orderBy")>u.SERVICE&&(t.orderBy=((m=this.orderBy)==null?void 0:m.map(c=>c.toJSON()))??null),t}_assignDefaultSymbolColors(r){this._forEachSimpleMarkerSymbols(r,t=>{var e;t.color||t.style!=="esriSMSX"&&t.style!=="esriSMSCross"||((e=t.outline)!=null&&e.color?t.color=t.outline.color:t.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(r,t){if(r){const e=("uniqueValueInfos"in r?r.uniqueValueInfos:"classBreakInfos"in r?r.classBreakInfos:null)??[];for(const i of e)C(i.symbol)&&t(i.symbol);"symbol"in r&&C(r.symbol)&&t(r.symbol),"defaultSymbol"in r&&C(r.defaultSymbol)&&t(r.defaultSymbol)}}_setAndNotifyLayer(r,t){var y,d,f,m;const e=this.layer,i=this._get(r);let s,o;switch(r){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",o="supportsModification";break;case"orderBy":s="supportsSublayerOrderBy",o="supportsModification"}const p=A(this).getDefaultOrigin();if(p!=="service"){if(s&&((f=(d=(y=this.layer)==null?void 0:y.capabilities)==null?void 0:d.exportMap)==null?void 0:f[s])===!1)return void this._logLockedError(r,`capability not available 'layer.capabilities.exportMap.${s}'`);if(o&&((m=this.capabilities)==null?void 0:m.exportMap[o])===!1)return void this._logLockedError(r,`capability not available 'capabilities.exportMap.${o}'`)}r!=="source"||this.loadStatus==="not-loaded"?(this._set(r,t),p!=="service"&&i!==t&&e&&e.emit&&e.emit("sublayer-update",{propertyName:r,target:this})):this._logLockedError(r,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(r,t){t&&(t.forEach(e=>{e.parent=null,e.layer=null}),this.removeAllHandles()),r&&(r.forEach(e=>{e.parent=this,e.layer=this.layer}),this.addHandles([r.on("after-add",({item:e})=>{e.parent=this,e.layer=this.layer}),r.on("after-remove",({item:e})=>{e.parent=null,e.layer=null}),r.on("before-changes",e=>{var i,s,o;(((o=(s=(i=this.layer)==null?void 0:i.capabilities)==null?void 0:s.exportMap)==null?void 0:o.supportsSublayersChanges)??1)||(x.getLogger(this).error(new b("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())})]))}_logLockedError(r,t){const{layer:e,declaredClass:i}=this;x.getLogger(i).error(new b("sublayer:locked",`Property '${String(r)}' can't be changed on Sublayer from the layer '${e==null?void 0:e.id}'`,{reason:t,sublayer:this,layer:e}))}_getLayerDomain(r){var t;return((t=this.fieldsIndex.get(r))==null?void 0:t.domain)??null}};l.test={isMapImageLayerOverridePolicy:r=>r===_||r===E||r===V,isTileImageLayerOverridePolicy:r=>r===R},a([n({readOnly:!0})],l.prototype,"capabilities",void 0),a([I("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null),a([n()],l.prototype,"defaultPopupTemplate",null),a([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:V}}})],l.prototype,"definitionExpression",null),a([n({readOnly:!0})],l.prototype,"effectiveScaleRange",null),a([I("service","maxScaleRange",["minScale","maxScale"])],l.prototype,"readMaxScaleRange",null),a([n({type:[xe],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0),a([n({readOnly:!0})],l.prototype,"fieldsIndex",null),a([n({type:Re,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:V},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null),a([n({type:Z,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0),a([n({type:N.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:N.read}}}}})],l.prototype,"geometryType",void 0),a([n({type:String})],l.prototype,"globalIdField",void 0),a([I("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null),a([n({type:q,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null),a([n({readOnly:!0})],l.prototype,"isTable",void 0),a([I("service","isTable",["type"])],l.prototype,"readIsTable",null),a([n({value:null,type:[Oe],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:_}}})],l.prototype,"labelingInfo",null),a([L("labelingInfo")],l.prototype,"writeLabelingInfo",null),a([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:E}}})],l.prototype,"labelsVisible",null),a([n({value:null})],l.prototype,"layer",null),a([n({type:String,json:{write:{overridePolicy:R}}})],l.prototype,"layerItemId",void 0),a([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:D}}})],l.prototype,"legendEnabled",void 0),a([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null),a([n({type:Number,value:0,json:{write:{overridePolicy:E}}})],l.prototype,"minScale",null),a([I("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null),a([n({type:Number,value:0,json:{write:{overridePolicy:E}}})],l.prototype,"maxScale",null),a([I("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null),a([n()],l.prototype,"objectIdField",void 0),a([I("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null),a([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:E}}})],l.prototype,"opacity",null),a([I("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null),a([L("opacity")],l.prototype,"writeOpacity",null),a([n({value:null,type:[Te],json:{name:"layerDefinition.orderBy",read:{reader:Fe}}})],l.prototype,"orderBy",null),a([n({json:{type:q,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:E}}})],l.prototype,"parent",void 0),a([L("parent")],l.prototype,"writeParent",null),a([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(r,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:D,writer(r,t,e){t[e]=!r}}}})],l.prototype,"popupEnabled",void 0),a([n({type:_e,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:D}}})],l.prototype,"popupTemplate",void 0),a([n({readOnly:!0})],l.prototype,"queryTask",null),a([n({type:[Me],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],l.prototype,"relationships",void 0),a([n({types:Pe,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:_},origins:{"web-scene":{types:De,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:_}}}}})],l.prototype,"renderer",null),a([n({types:{key:"type",base:null,typeMap:{"data-layer":K,"map-layer":$}},cast(r){if(r){if("mapLayerId"in r)return G($,r);if("dataSource"in r)return G(K,r)}return r},json:{name:"layerDefinition.source",write:{overridePolicy:E}}})],l.prototype,"source",null),a([n()],l.prototype,"sourceJSON",void 0),a([n({type:Y,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],l.prototype,"spatialReference",void 0),a([n({value:null,json:{type:[q],write:{target:"subLayerIds",allowNull:!0,overridePolicy:E}}})],l.prototype,"sublayers",null),a([Ae("sublayers")],l.prototype,"castSublayers",null),a([L("sublayers")],l.prototype,"writeSublayers",null),a([n({type:String,json:{name:"name",write:{overridePolicy:D}}})],l.prototype,"title",void 0),a([I("service","title",["name","layerDefinition.name"])],l.prototype,"readTitle",null),a([n({type:String})],l.prototype,"typeIdField",void 0),a([n({json:{read:!1},readOnly:!0,value:"sublayer"})],l.prototype,"type",void 0),a([I("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null),a([n({type:[Ve],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0),a([n({type:String,json:{name:"layerUrl",write:{overridePolicy:R}}})],l.prototype,"url",null),a([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:E}}})],l.prototype,"visible",null),a([L("visible")],l.prototype,"writeVisible",null),l=j=a([B("esri.layers.support.Sublayer")],l);const Q=l;function Qe(r,t){const e=[],i={};return r&&r.forEach(s=>{const o=new Q;if(o.read(s,t),i[o.id]=o,s.parentLayerId!=null&&s.parentLayerId!==-1){const p=i[s.parentLayerId];p.sublayers||(p.sublayers=[]),p.sublayers.unshift(o)}else e.unshift(o)}),e}const P=k.ofType(Q);function ee(r,t){r&&r.forEach(e=>{t(e),e.sublayers&&e.sublayers.length&&ee(e.sublayers,t)})}const Ze=r=>{let t=class extends r{constructor(...e){super(...e),this.allSublayers=new je({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={[u.SERVICE]:{},[u.PORTAL_ITEM]:{},[u.WEB_SCENE]:{},[u.WEB_MAP]:{},[u.LINK_CHART]:{}},this.subtables=null,this.addHandles([X(()=>this.sublayers,(i,s)=>this._handleSublayersChange(i,s),z),X(()=>this.subtables,(i,s)=>this._handleSublayersChange(i,s),z)])}destroy(){this.allSublayers.destroy()}readSublayers(e,i){if(!i||!e)return;const{sublayersSourceJSON:s}=this,o=O(i.origin);if(o<u.SERVICE||(s[o]={context:i,visibleLayers:e.visibleLayers||s[o].visibleLayers,layers:e.layers||s[o].layers},o>u.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:p,origin:y}=this.createSublayersForOrigin("web-document"),d=A(this);d.setDefaultOrigin(y),this._set("sublayers",new P(p)),d.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find(i=>i.id===e)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const i=O(e==="web-document"?"web-map":e);let s=u.SERVICE,o=this.sublayersSourceJSON[u.SERVICE].layers,p=this.sublayersSourceJSON[u.SERVICE].context,y=null;const d=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter(h=>h<=i);for(const h of d){const w=this.sublayersSourceJSON[h];Ne(w.layers)&&(s=h,o=w.layers,p=w.context,w.visibleLayers&&(y={visibleLayers:w.visibleLayers,context:w.context}))}const f=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter(h=>h>s&&h<=i);let m=null;for(const h of f){const{layers:w,visibleLayers:v,context:F}=this.sublayersSourceJSON[h];w&&(m={layers:w,context:F}),v&&(y={visibleLayers:v,context:F})}const c=Qe(o,p),g=new Map,S=new Set;if(m)for(const h of m.layers)g.set(h.id,h);if(y!=null&&y.visibleLayers)for(const h of y.visibleLayers)S.add(h);return ee(c,h=>{m&&h.read(g.get(h.id),m.context),y&&h.read({defaultVisibility:S.has(h.id)},y.context)}),{origin:qe(s),sublayers:new P({items:c})}}read(e,i){super.read(e,i),this.readSublayers(e,i)}_handleSublayersChange(e,i){i&&(i.forEach(s=>{s.parent=null,s.layer=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(s=>{s.parent=this,s.layer=this}),this.addHandles([e.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),e.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(e.on("before-changes",s=>{x.getLogger("esri.layers.TileLayer").error(new b("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([n({readOnly:!0})],t.prototype,"allSublayers",void 0),a([n({readOnly:!0,type:k.ofType(Q)})],t.prototype,"serviceSublayers",void 0),a([n({value:null,type:P,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),a([n({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),a([n({type:P,json:{read:{source:"tables"}}})],t.prototype,"subtables",void 0),t=a([B("esri.layers.mixins.SublayersOwner")],t),t};export{ze as f,Ze as m,Q as s};
