import{lh as p,gE as v,li as P}from"./index-D805BexR.js";const J=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],Y=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],b=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],ee=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];var _=999,A=9999,w=0,D=1,k=2,F=3,j=4,M=5,te=6,re=7,oe=8,R=9,ae=10,V=11,ne=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function ie(){var o,e,r,t=0,i=0,n=_,a=[],l=[],s=1,f=0,c=0,m=!1,h=!1,d="";return function(u){return l=[],u!==null?N(u.replace?u.replace(/\r\n/g,`
`):u):X()};function g(u){u.length&&l.push({type:ne[n],data:u,position:c,line:s,column:f})}function N(u){var T;for(t=0,r=(d+=u).length;o=d[t],t<r;){switch(T=t,n){case w:t=q();break;case D:t=H();break;case k:t=C();break;case F:t=z();break;case j:t=Q();break;case V:t=K();break;case M:t=W();break;case A:t=Z();break;case R:t=$();break;case _:t=G()}T!==t&&(d[T]===`
`?(f=0,++s):++f)}return i+=t,d=d.slice(t),l}function X(u){return a.length&&g(a.join("")),n=ae,g("(eof)"),l}function G(){return a=a.length?[]:a,e==="/"&&o==="*"?(c=i+t-1,n=w,e=o,t+1):e==="/"&&o==="/"?(c=i+t-1,n=D,e=o,t+1):o==="#"?(n=k,c=i+t,t):/\s/.test(o)?(n=R,c=i+t,t):(m=/\d/.test(o),h=/[^\w_]/.test(o),c=i+t,n=m?j:h?F:A,t)}function $(){return/[^\s]/g.test(o)?(g(a.join("")),n=_,t):(a.push(o),e=o,t+1)}function C(){return o!=="\r"&&o!==`
`||e==="\\"?(a.push(o),e=o,t+1):(g(a.join("")),n=_,t)}function H(){return C()}function q(){return o==="/"&&e==="*"?(a.push(o),g(a.join("")),n=_,t+1):(a.push(o),e=o,t+1)}function z(){if(e==="."&&/\d/.test(o))return n=M,t;if(e==="/"&&o==="*")return n=w,t;if(e==="/"&&o==="/")return n=D,t;if(o==="."&&a.length){for(;U(a););return n=M,t}if(o===";"||o===")"||o==="("){if(a.length)for(;U(a););return g(o),n=_,t+1}var u=a.length===2&&o!=="=";if(/[\w_\d\s]/.test(o)||u){for(;U(a););return n=_,t}return a.push(o),e=o,t+1}function U(u){for(var T,y,L=0;;){if(T=b.indexOf(u.slice(0,u.length+L).join("")),y=b[T],T===-1){if(L--+u.length>0)continue;y=u.slice(0,1).join("")}return g(y),c+=y.length,(a=a.slice(y.length)).length}}function K(){return/[^a-fA-F0-9]/.test(o)?(g(a.join("")),n=_,t):(a.push(o),e=o,t+1)}function Q(){return o==="."||/[eE]/.test(o)?(a.push(o),n=M,e=o,t+1):o==="x"&&a.length===1&&a[0]==="0"?(n=V,a.push(o),e=o,t+1):/[^\d]/.test(o)?(g(a.join("")),n=_,t):(a.push(o),e=o,t+1)}function W(){return o==="f"&&(a.push(o),e=o,t+=1),/[eE]/.test(o)||o==="-"&&/[eE]/.test(e)?(a.push(o),e=o,t+1):/[^\d]/.test(o)?(g(a.join("")),n=_,t):(a.push(o),e=o,t+1)}function Z(){if(/[^\d\w_]/.test(o)){var u=a.join("");return n=Y.indexOf(u)>-1?oe:ee.indexOf(u)>-1?re:te,g(a.join("")),n=_,t}return a.push(o),e=o,t+1}}function se(o){var e=ie(),r=[];return r=(r=r.concat(e(o))).concat(e(null))}function le(o){return se(o)}function ce(o){return o.map(e=>e.type!=="eof"?e.data:"").join("")}const E=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function fe(o,e="100",r="300 es"){const t=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const i of o)if(i.type==="preprocessor"){const n=t.exec(i.data);if(n){const a=n[1].replaceAll(/\s{2,}/g," ");if(a===r)return a;if(a===e)return i.data="#version "+r,e;throw new Error("unknown glsl version: "+a)}}return o.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:`
`}),null}function me(o,e){for(let r=e-1;r>=0;r--){const t=o[r];if(t.type!=="whitespace"&&t.type!=="block-comment"){if(t.type!=="keyword")break;if(t.data==="attribute"||t.data==="in")return!0}}return!1}function S(o,e,r,t){t=t||r;for(const i of o)if(i.type==="ident"&&i.data===r)return t in e?e[t]++:e[t]=0,S(o,e,t+"_"+e[t],t);return r}function I(o,e,r="afterVersion"){function t(s,f){for(let c=f;c<s.length;c++){const m=s[c];if(m.type==="operator"&&m.data===";")return c}return null}function i(s){let f=-1,c=0,m=-1;for(let h=0;h<s.length;h++){const d=s[h];if(d.type==="preprocessor"&&(/#(if|ifdef|ifndef)\s+.+/.test(d.data)?++c:/#endif\s*.*/.test(d.data)&&--c),r!=="afterVersion"&&r!=="afterPrecision"||d.type==="preprocessor"&&d.data.startsWith("#version")&&(m=Math.max(m,h)),r==="afterPrecision"&&d.type==="keyword"&&d.data==="precision"){const g=t(s,h);if(g===null)throw new Error("precision statement not followed by any semicolons!");m=Math.max(m,g)}f<m&&c===0&&(f=h)}return f+1}const n={data:`
`,type:"whitespace"},a=s=>s<o.length&&/[^\r\n]$/.test(o[s].data);let l=i(o);a(l-1)&&o.splice(l++,0,n);for(const s of e)o.splice(l++,0,s);a(l-1)&&a(l)&&o.splice(l,0,n)}function ue(o,e,r,t="lowp"){I(o,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:t},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function he(o,e,r,t,i="lowp"){I(o,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:t.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function ge(o,e){let r,t,i=-1;for(let n=e;n<o.length;n++){const a=o[n];if(a.type==="operator"&&(a.data==="["&&(r=n),a.data==="]")){t=n;break}a.type==="integer"&&(i=parseInt(a.data,10))}return r&&t&&o.splice(r,t-r+1),i}function O(o,e){if(o.startsWith("#version 300"))return o;const r=le(o);if(fe(r,"100","300 es")==="300 es")return o;let t=null,i=null;const n={},a={};for(let l=0;l<r.length;++l){const s=r[l];switch(s.type){case"keyword":e===p.VERTEX_SHADER&&s.data==="attribute"?s.data="in":s.data==="varying"&&(s.data=e===p.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(s.data.trim())&&(s.data=s.data.replaceAll(/(2D|Cube|EXT)/g,"")),e===p.FRAGMENT_SHADER&&s.data==="gl_FragColor"&&(t||(t=S(r,n,"fragColor"),ue(r,t,"vec4")),s.data=t),e===p.FRAGMENT_SHADER&&s.data==="gl_FragData"){const f=ge(r,l+1),c=S(r,n,"fragData");he(r,c,"vec4",f,"mediump"),s.data=c}else e===p.FRAGMENT_SHADER&&s.data==="gl_FragDepthEXT"&&(i||(i=S(r,n,"gl_FragDepth")),s.data=i);break;case"ident":if(J.includes(s.data)){if(e===p.VERTEX_SHADER&&me(r,l))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");s.data in a||(a[s.data]=S(r,n,s.data)),s.data=a[s.data]}}}for(let l=r.length-1;l>=0;--l){const s=r[l];if(s.type==="preprocessor"){const f=s.data.match(/#extension\s+(.*):/);if(f!=null&&f[1]&&E.has(f[1].trim())){const h=r[l+1];r.splice(l,h&&h.type==="whitespace"?2:1)}const c=s.data.match(/#ifdef\s+(.*)/);c!=null&&c[1]&&E.has(c[1].trim())&&(s.data="#if 1");const m=s.data.match(/#ifndef\s+(.*)/);m!=null&&m[1]&&E.has(m[1].trim())&&(s.data="#if 0")}}return de(o,ce(r))}function de(o,e){return e}const _e=4294967295;class pe{constructor(e,r,t,i,n=new Map,a=[]){var f;this._context=e,this._locations=i,this._uniformBlockBindings=n,this._transformFeedbackVaryings=a,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e||console.error("RenderingContext isn't initialized!"),r.length===0&&console.error("Shaders source should not be empty!"),r=O(r,p.VERTEX_SHADER),t=O(t,p.FRAGMENT_SHADER),this._vShader=B(this._context,p.VERTEX_SHADER,r),this._fShader=B(this._context,p.FRAGMENT_SHADER,t),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(v.Shader,this),P()&&(this.vertexShader=r,this.fragmentShader=t),this.usedMemory=r.length+t.length;const l=this._context.gl,s=l.createProgram();l.attachShader(s,this._vShader),l.attachShader(s,this._fShader),this._locations.forEach((c,m)=>l.bindAttribLocation(s,c,m)),(f=this._transformFeedbackVaryings)!=null&&f.length&&l.transformFeedbackVaryings(s,this._transformFeedbackVaryings,l.SEPARATE_ATTRIBS),l.linkProgram(s),P()&&!l.getProgramParameter(s,l.LINK_STATUS)&&console.error(`Could not link shader
validated: ${l.getProgramParameter(s,l.VALIDATE_STATUS)}, gl error ${l.getError()}, vertex: ${l.getShaderParameter(this._vShader,l.COMPILE_STATUS)}, fragment: ${l.getShaderParameter(this._fShader,l.COMPILE_STATUS)}, info log: ${l.getProgramInfoLog(s)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[c,m]of this._uniformBlockBindings){const h=l.getUniformBlockIndex(s,c);h<_e&&l.uniformBlockBinding(s,h,m)}this._glName=s,this._context.instanceCounter.increment(v.Program,this)}get glName(){return this._glName}get hasGLName(){return this._glName!=null}get hasTransformFeedbackVaryings(){var e;return!!((e=this._transformFeedbackVaryings)!=null&&e.length)}get compiled(){if(this._compiled)return!0;const e=this._context.gl.getExtension("KHR_parallel_shader_compile");return e==null||this.glName==null?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const e=this._context.gl,r=this._context.instanceCounter;this._nameToUniformLocation.forEach(t=>t&&r.decrement(v.Uniform,t)),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(r.decrement(v.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),e.deleteShader(this._vShader),this._vShader=null,r.decrement(v.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,r.decrement(v.Program,this))}ref(){++this._refCount}_getUniformLocation(e){const r=this._nameToUniformLocation.get(e);if(r!==void 0)return r;if(this.glName){const t=this._context.gl.getUniformLocation(this.glName,e);return this._nameToUniformLocation.set(e,t),t&&this._context.instanceCounter.increment(v.Uniform,t),t}return null}hasUniform(e){return this._getUniformLocation(e)!=null}setUniform1i(e,r){const t=this._nameToUniform1.get(e);t!==void 0&&r===t||(this._context.gl.uniform1i(this._getUniformLocation(e),r),this._nameToUniform1.set(e,r))}setUniform1iv(e,r){x(this._nameToUniform1v,e,r)&&this._context.gl.uniform1iv(this._getUniformLocation(e),r)}setUniform2iv(e,r){x(this._nameToUniform2,e,r)&&this._context.gl.uniform2iv(this._getUniformLocation(e),r)}setUniform3iv(e,r){x(this._nameToUniform3,e,r)&&this._context.gl.uniform3iv(this._getUniformLocation(e),r)}setUniform4iv(e,r){x(this._nameToUniform4,e,r)&&this._context.gl.uniform4iv(this._getUniformLocation(e),r)}setUniform1f(e,r){const t=this._nameToUniform1.get(e);t!==void 0&&r===t||(this._context.gl.uniform1f(this._getUniformLocation(e),r),this._nameToUniform1.set(e,r))}setUniform1fv(e,r){x(this._nameToUniform1v,e,r)&&this._context.gl.uniform1fv(this._getUniformLocation(e),r)}setUniform2f(e,r,t){const i=this._nameToUniform2.get(e);i===void 0?(this._context.gl.uniform2f(this._getUniformLocation(e),r,t),this._nameToUniform2.set(e,[r,t])):r===i[0]&&t===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),r,t),i[0]=r,i[1]=t)}setUniform2fv(e,r){x(this._nameToUniform2,e,r)&&this._context.gl.uniform2fv(this._getUniformLocation(e),r)}setUniform3f(e,r,t,i){const n=this._nameToUniform3.get(e);n===void 0?(this._context.gl.uniform3f(this._getUniformLocation(e),r,t,i),this._nameToUniform3.set(e,[r,t,i])):r===n[0]&&t===n[1]&&i===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),r,t,i),n[0]=r,n[1]=t,n[2]=i)}setUniform3fv(e,r){const t=this._getUniformLocation(e);t!=null&&x(this._nameToUniform3,e,r)&&this._context.gl.uniform3fv(t,r)}setUniform4f(e,r,t,i,n){const a=this._nameToUniform4.get(e);a===void 0?(this._context.gl.uniform4f(this._getUniformLocation(e),r,t,i,n),this._nameToUniform4.set(e,[r,t,i,n])):a!==void 0&&r===a[0]&&t===a[1]&&i===a[2]&&n===a[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),r,t,i,n),a[0]=r,a[1]=t,a[2]=i,a[3]=n)}setUniform4fv(e,r){const t=this._getUniformLocation(e);t!=null&&x(this._nameToUniform4,e,r)&&this._context.gl.uniform4fv(t,r)}setUniformMatrix3fv(e,r,t=!1){const i=this._getUniformLocation(e);i!=null&&x(this._nameToUniformMatrix3,e,r)&&this._context.gl.uniformMatrix3fv(i,t,r)}setUniformMatrix4fv(e,r,t=!1){const i=this._getUniformLocation(e);i!=null&&x(this._nameToUniformMatrix4,e,r)&&this._context.gl.uniformMatrix4fv(i,t,r)}stop(){}}function B(o,e,r){const t=o.gl,i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),P()&&!t.getShaderParameter(i,t.COMPILE_STATUS)&&(console.error("Compile error in ".concat(e===p.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(t.getShaderInfoLog(i)),console.error(xe(r))),i}function xe(o){let e=2;return o.replaceAll(`
`,()=>`
`+Te(e++)+":")}function Te(o){return o>=1e3?o.toString():("  "+o).slice(-3)}function x(o,e,r){const t=o.get(e);if(!t)return o.set(e,Array.from(r)),!0;const i=r.length;if(t.length!==i)return o.set(e,Array.from(r)),!0;for(let n=0;n<i;++n){const a=r[n];if(t[n]!==a){for(t[n]=a;n<i;++n)t[n]=r[n];return!0}}return!1}let ye=class{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,r=new Map){if(r.has(e))return r.get(e);const t=this._read(e);if(!t)throw new Error(`cannot find shader file ${e}`);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=i.exec(t);const a=[];for(;n!=null;)a.push({path:n[1],start:n.index,length:n[0].length}),n=i.exec(t);let l=0,s="";return a.forEach(f=>{s+=t.slice(l,f.start),s+=r.has(f.path)?"":this._resolve(f.path,r),l=f.start+f.length}),s+=t.slice(l),r.set(e,s),s}_read(e){return this._readFile(e)}};function Me(o,e,r=""){return new pe(o,r+e.shaders.vertexShader,r+e.shaders.fragmentShader,e.attributes)}export{Me as a,ye as e,pe as r};
