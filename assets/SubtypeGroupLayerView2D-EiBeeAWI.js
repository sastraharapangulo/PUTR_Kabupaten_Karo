import{c3 as s,c4 as n,aQ as d,B as u,F as l}from"./index-D805BexR.js";import{d as g}from"./FeatureLayerView2D-Czh8rfNx.js";import"./Container-WNQER5_s.js";import"./featureConversionUtils-LQ6scY2Y.js";import"./OptimizedFeature-DC5t7Kx6.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-C7yz1C6O.js";import"./AttributeBinsFeatureSet-BFQzX1Ev.js";import"./AttributeBinsQuery-BmgHofB9.js";import"./queryUtils-B40a_Ryi.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-CE4X6VC4.js";import"./LayerView-DdTJwN4L.js";import"./TechniqueInstance-DUICj094.js";import"./UpdateTracking2D-CmEzRSF4.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-n4jYLeku.js";import"./floatRGBA-xUiheES7.js";import"./Rect-CUzevAry.js";import"./Utils-CmhYdcyH.js";import"./FramebufferObject-DWvQfw0w.js";import"./VertexArrayObject-Dix4c-39.js";import"./TileContainer-Bhc-6jkh.js";import"./WGLContainer-9860aEpV.js";import"./ProgramTemplate-UKKSgXUP.js";import"./vec3f32-nZdmKIgz.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-Bk8JkLnQ.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CpvMkqdM.js";import"./ShaderBuilder-GHSF3cZN.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-73f-9oZT.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-ALKYtBjk.js";import"./constants-B4mRqufT.js";import"./parquet-CHUmu2rm.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BC3knoQ9.js";import"./RefreshableLayerView-DuRNCvD0.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ri=i;export{ri as default};
