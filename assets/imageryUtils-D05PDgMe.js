import{P as o,$ as c}from"./utils-DdEiCD9C.js";import{fR as p,fU as u,fV as i,fT as f}from"./index-CdyqwYB1.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./saveUtils-C4qLftUE.js";const y="Image Service",g="imagery-layer-save",v="imagery-layer-save-as",d="imagery-tile-layer-save",T="imagery-tile-layer-save-as",l="WCS",I="wcs-layer-save",w="wcs-layer-save-as";function m(a){var t;if(a.type==="imagery"||a.type==="wcs")return{isValid:!0};const{raster:e}=a,r=(e==null?void 0:e.datasetFormat)==="Function"?(t=e.primaryRasters)==null?void 0:t.rasters[0]:e;return{isValid:(r==null?void 0:r.datasetFormat)==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(a){const e=a.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function x(a,e){const{parsedUrl:r,title:t,fullExtent:s}=a;e.url=r.path,e.title||(e.title=t);try{e.extent=await p(s)}catch{e.extent=void 0}u(e,i.METADATA),f(e,i.TILED_IMAGERY,a.type==="imagery-tile")}async function D(a,e){const r=a.type==="imagery"?g:a.type==="imagery-tile"?d:I,t=a.type==="wcs"?l:y;return o({layer:a,itemType:t,validateLayer:m,createItemData:n,errorNamePrefix:r},e)}async function M(a,e,r){const t=a.type==="imagery"?v:a.type==="imagery-tile"?T:w,s=a.type==="wcs"?l:y;return c({layer:a,itemType:s,validateLayer:m,createItemData:n,errorNamePrefix:t,newItem:e,setItemProperties:x},r)}export{D as save,M as saveAs};
