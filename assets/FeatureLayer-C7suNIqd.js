const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/featureLayerUtils-BQ0dd2OU.js","assets/index-D805BexR.js","assets/index-DsnHzo1r.css","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/utils-BzTZQNhH.js","assets/saveUtils-BOqYqBMp.js","assets/fetchService-BKW0i_U8.js","assets/FeatureLayerSource-D59A6TpO.js","assets/MeshLocalVertexSpace-t9X9xoeg.js","assets/meshVertexSpaceUtils-Wh4dtXYr.js","assets/External-D_bQF6wV.js","assets/infoFor3D-dHKPbXlj.js","assets/MeshTransform-DIYujxNG.js","assets/mat4f64-Dk4dwAN8.js","assets/quat-RTaSMq_Q.js","assets/mat3f64-q3fE-ZOt.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-jNSQteiL.js","assets/editingSupport-QyuqlhDZ.js","assets/EditBusLayer-Zxg-2J8D.js","assets/QueryTask-DM_JbPus.js","assets/executeForIds-D8z0L91X.js","assets/query-DUWqC2og.js","assets/pbfQueryUtils-DI7zXXPz.js","assets/pbf-n4fcUJTY.js","assets/OptimizedFeature-DC5t7Kx6.js","assets/OptimizedFeatureSet-Blu9Ckm7.js","assets/queryZScale-f5biojS7.js","assets/executeQueryJSON-CfSaxG0D.js","assets/featureConversionUtils-LQ6scY2Y.js","assets/editsZScale-upTKWkSl.js","assets/TopFeaturesQuery-IOq_mCRr.js","assets/AttributeBinsQuery-BmgHofB9.js","assets/queryUtils-B40a_Ryi.js","assets/json-Wa8cmqdu.js","assets/FixedIntervalBinParameters-CE4X6VC4.js"])))=>i.map(i=>d[i]);
import{hX as B,kS as W,V as M,bu as J,b as m,a$ as z,aA as H,cT as U,aQ as Y,A as S,ia as P,B as s,kT as K,c1 as X,J as R,E as n,F as E,bK as ee,ic as te,id as re,ib as ie,cO as se,ie as ae,fv as oe,ig as ne,cP as le,eY as ue,f8 as de,eZ as pe,e_ as ye,e$ as ce,f9 as he,fa as fe,bF as me,cQ as be,ax as ge,f$ as we,_ as w,aZ as _e,i1 as ve,c9 as Te,kb as Fe,fG as I,kU as Se,kV as Ie,I as Ee,cV as x,ih as k,ix as $e,iy as De,bJ as Q,hT as Oe,d as je,hU as Ce,kc as qe,kd as Me,jN as Le,kW as Pe,ii as Re,gv as xe,k4 as ke,cE as Ae,ke as Ge,kf as Ve,jO as Ne,kX as Je,kh as Qe,bw as Ze,ki as Be,ej as A,kj as We,kk as ze,kl as He,km as Ue,kY as Ye,as as Ke,ij as Xe,jP as et,jM as tt,bH as c,kZ as rt,j_ as it,bI as $,ik as st,k_ as G,f0 as at,io as ot,il as D,ka as O,im as nt,H as j,iB as lt,k$ as ut,f1 as dt,l0 as pt,ip as yt,c5 as ct,iq as ht,ir as ft,is as mt,fM as bt,kn as gt}from"./index-D805BexR.js";import{R as wt,V as _t}from"./FeatureLayerBase-r2XOKsjK.js";import{i as vt}from"./editsZScale-upTKWkSl.js";import{t as V}from"./queryZScale-f5biojS7.js";import{F as Tt}from"./EditBusLayer-Zxg-2J8D.js";import{c as Z}from"./FeatureType-CWyatfcF.js";import{c as Ft}from"./serviceCapabilitiesUtils-Doq4nAXp.js";import{u as St}from"./TitleCreator-CvXbdi7P.js";import{t as It}from"./versionUtils-DM2EnPDJ.js";import{t as Et}from"./styleUtils-CGyLIvbc.js";import{A as T}from"./interfaces-CL2NbQte.js";import"./LayerFloorInfo-Bb0jzCDH.js";import"./Relationship-C_n-JFK5.js";import"./infoFor3D-dHKPbXlj.js";let $t=0,b=class extends B.LoadableMixin(W.EsriPromiseMixin(M)){constructor(e){super(e),this._idToClientGraphic=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}get _workerGeometryType(){var t;const e=(t=this.layer)==null?void 0:t.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);V(e,this.layer.spatialReference,r);const i=J.fromJSON(r);if(!this._requiresClientGraphicMapping())return i;const o=this.layer.objectIdField;for(const l of i.features){const u=l.attributes[o],p=this._idToClientGraphic.get(u);p&&(l.geometry=p.geometry)}return i.geometryType=this.layer.geometryType,i}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new m("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return V(e,this.layer.spatialReference,r),r}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(r=>({count:r.count,extent:z.fromJSON(r.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e==null?void 0:e.toJSON(),t)}async _applyEdits(e){if(!this._connection)throw new m("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let r=null;const i=[],o=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=d=>"objectId"in d&&d.objectId!=null?d.objectId:"attributes"in d&&d.attributes[t]!=null?d.attributes[t]:null;if(e.addFeatures&&(r=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const d of e.deleteFeatures){const f=l(d);f!=null&&i.push(f)}const u=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures){for(const d of e.updateFeatures)if(o.push(this._serializeFeature(d)),u){const f=l(d);f!=null&&u.set(f,d)}}vt(r?r.features:null,o,this.layer.spatialReference);const{fullExtent:p,featureEditResults:y}=await this._connection.invoke("applyEdits",{adds:r?r.features:[],updates:o,deletes:i});return this.fullExtent=p,r&&r.finish(y.uidToObjectId),this._updateClientGraphicIds(u,y),this._createEditsResult(y)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const r=[];for(const{geometry:i}of e)i==null||i.type!=="mesh"||i.hasExtent||i.loaded||r.push(i.load({signal:t}));r.length&&await Promise.all(r)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const r of t.updateResults){if(!r.success)continue;const i=e.get(r.objectId);i!=null&&this._addIdToClientGraphic(i)}for(const r of t.deleteResults)r.success&&this._idToClientGraphic.delete(r.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new m("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,r=new Array(e.length);let i=null;for(let l=0;l<e.length;l++){const u=e[l],p=this._serializeFeature(u);i||u.geometry==null||(i=u.geometry.type),r[l]=p,t.set(`${p.uid}`,u)}const o=this;return{features:r,inferredGeometryType:i,finish(l){const u=o.sourceJSON.objectIdField;for(const p in l){const y=l[p],d=t.get(p);d&&(d.attributes||(d.attributes={}),y===-1?delete d.attributes[u]:d.attributes[u]=y,o._addIdToClientGraphic(d))}}}}_addIdToClientGraphic(e){var i;if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,r=(i=e.attributes)==null?void 0:i[t];r!=null&&this._idToClientGraphic.set(r,e)}get _layerOrSourceGeometryType(){var e,t;return((e=this.layer)==null?void 0:e.geometryType)??((t=this.sourceJSON)==null?void 0:t.geometryType)}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e),i=($t++).toString();return r?{uid:i,geometry:r.toJSON(),attributes:t}:{uid:i,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?H.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await U("MemorySourceWorker",{strategy:Y("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,objectIdField:i,hasM:o,hasZ:l,timeInfo:u,dateFieldsTimeZone:p}=this.layer,y=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const d=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",_=>{S.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),_.preventDefault()}));const f={features:d.features,fields:t==null?void 0:t.map(_=>_.toJSON()),geometryType:P.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&o,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:i,spatialReference:y?null:r&&r.toJSON(),timeInfo:(u==null?void 0:u.toJSON())??null,dateFieldsTimeZone:p},g=await this._connection.invoke("load",f,{signal:e});for(const _ of g.warnings)S.getLogger(this.layer).warn("#load()",`${_.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:_});g.featureErrors.length&&S.getLogger(this.layer).warn("#load()",`Encountered ${g.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:g.featureErrors});const L=g.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(d.inferredGeometryType)&&(L.geometryType=P.toJSON(d.inferredGeometryType)),this.sourceJSON=L,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),d.finish(g.assignedObjectIds)}};s([K({Type:R,ensureType:X(R)})],b.prototype,"itemType",void 0),s([n()],b.prototype,"type",void 0),s([n({constructOnly:!0})],b.prototype,"layer",void 0),s([n({readOnly:!0})],b.prototype,"_workerGeometryType",null),s([n()],b.prototype,"sourceJSON",void 0),b=s([E("esri.layers.graphics.sources.MemorySource")],b);let v=class extends ee{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([n()],v.prototype,"updating",void 0),s([n()],v.prototype,"status",void 0),v=s([E("esri.layers.support.PublishingInfo")],v);const Dt=v,Ot=Symbol(),jt=e=>{var t;let r=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const i=this._get("publishingInfo");if(i)return i;const o=new Dt;return this._checkPublishingStatus(o),o}_checkPublishingStatus(i){let u=0;const p=async d=>{let f;i.updating=!0;try{f=await this.fetchPublishingStatus()}catch{f="unavailable"}f!=="published"&&f!=="unavailable"||(i.status==="publishing"&&this.refresh(),y.remove()),i.status=f,i.updating=!1,y.removed||(u=setTimeout(p,d,d+125))},y={removed:!1,remove(){this.removed=!0,clearTimeout(u)}};this.when().catch(()=>y.remove()),p(250),this.addHandles(y)}};return t=Ot,s([n({readOnly:!0,clonable:!1})],r.prototype,"publishingInfo",null),r=s([E("esri.layers.mixins.PublishableLayer")],r),r},h="FeatureLayer";function F(e,t){return new m("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function N(e){return e&&e instanceof M}const C=st();function q(e,t,r){const i=!!(r!=null&&r.writeLayerSchema);return{enabled:i,ignoreOrigin:i}}let a=class extends wt(te(re(jt(Tt(ie(se(ae(oe(ne(le(ue(de(pe(ye(ce(he(fe(me.ClonableMixin(be))))))))))))))))))){constructor(...e){super(...e),this.attributeTableTemplate=null,this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="ArcGISFeatureLayer",this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=ge.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=we(async(t,r,i)=>{const{save:o,saveAs:l}=await w(()=>import("./featureLayerUtils-BQ0dd2OU.js"),__vite__mapDeps([0,1,2,3,4,5,6,7]));switch(t){case T.SAVE:return o(this,r);case T.SAVE_AS:return l(this,i,r)}})}destroy(){var e;(e=this.source)==null||e.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){var i;const t=e!=null?e.signal:null;if((i=this.portalItem)!=null&&i.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(o=>this.initLayerProperties(o))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(_e).then(async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const o=await this._fetchFirstValidLayerId(t);o!=null&&(this.layerId=o)}if(!this.url&&!this._hasMemorySource())throw new m("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>ve(this,"load",e));return this.addResolvingPromise(r),Promise.resolve(this)}get _titleCreator(){const e=this._get("_titleCreator");return Te(e),new St({fieldsIndex:this.fieldsIndex,objectIdField:this.objectIdField,fields:this.fields,displayField:this.displayField,effectivePopupTemplate:this.popupTemplate??this.defaultPopupTemplate})}readCapabilities(e,t){return t=t.layerDefinition||t,Ft(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){var e;return!(this.loaded&&!((e=this.capabilities)!=null&&e.operations.supportsEditing))&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return Fe(this)}get featureTitleFields(){return[...this._titleCreator.requiredFields]}readIsTable(e,t){return(t=(t==null?void 0:t.layerDefinition)??t).type==="Table"||!t.geometryType}writeIsTable(e,t,r,i){i!=null&&i.writeLayerSchema&&I(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return Se(t.layerDefinition||t)}readObjectIdField(e,t){return Ie(t.layerDefinition||t)}get parsedUrl(){const e=Ee(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=x(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=x(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){k(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){var o;t=t.layerDefinition||t;const i=(o=t.drawingInfo)==null?void 0:o.renderer;if(i){const l=$e(i,t,r)??void 0;return l||S.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),l}return De(t,r)}set source(e){const t=this._get("source");t!==e&&(N(t)&&this._resetMemorySource(t),N(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof M?new b({layer:this,items:e}):e:null}readSource(e,t){const r=J.fromJSON(t.featureSet);return new b({layer:this,items:(r==null?void 0:r.features)??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r==null?void 0:r.creatorField,o=r==null?void 0:r.editorField;return e=e==null?void 0:e.map(l=>Q.fromJSON(l)),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,t){var o,l,u;const r=((o=t.layerDefinition)==null?void 0:o.name)??t.name,i=t.title||((l=t.layerDefinition)==null?void 0:l.title);if(r){const p=(u=this.portalItem)==null?void 0:u.title;if(this.sublayerTitleMode==="item-title")return this.url?Oe(this.url,r):r;let y=r;if(!y&&this.url){const d=je(this.url);d!=null&&(y=d.title)}return y?(this.sublayerTitleMode==="item-title-and-service-name"&&p&&p!==y&&(y=p+" - "+y),Ce(y)):void 0}if(this.sublayerTitleMode==="item-title"&&i)return i}readTitleFromWebMap(e,t){var r;return t.title||((r=t.layerDefinition)==null?void 0:r.name)}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(o=>o.name.toLowerCase()===r);i&&(r=i.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r==null?void 0:r.creatorField,o=r==null?void 0:r.editorField;return e==null?void 0:e.map(l=>(l=Z.fromJSON(l),this._fixTemplates(l.templates,i),this._fixTemplates(l.templates,o),l))}readVisible(e,t){var r;return((r=t.layerDefinition)==null?void 0:r.defaultVisibility)!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){const r=await qe(this,e,t,h);return this.lastEditsEventDate=new Date,r}async updateAttachment(e,t,r){const i=await Me(this,e,t,r,h);return this.lastEditsEventDate=new Date,i}async applyEdits(e,t){return Le(this,e,t)}async uploadAssets(e,t){return Pe(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return Re(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await xe(w(()=>import("./FeatureLayerSource-D59A6TpO.js"),__vite__mapDeps([8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31])),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=ke(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,r=Ae(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){const r=await Ge(this,e,t,h);return this.lastEditsEventDate=new Date,r}async fetchRecomputedExtents(e){return Ve(this,e,h)}getFeatureTitle(e,t={timeZone:"system",fetchMissingFields:!1}){return this._titleCreator.getTitle(this,e,t)}getFeatureType(e){return Ne(this.types,this.typeIdField,e)}getFieldDomain(e,t){var r;return Je(this,e,t,((r=this.getField(e))==null?void 0:r.domain)??null)}async queryAttachments(e,t){return Qe(this,e,t,h)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(Ze.from(e)??r.createQuery(),t);if(i!=null&&i.features)for(const o of i.features)o.layer=o.sourceLayer=r;return i}async queryObjectIds(e,t){return(await Be(this,e,t,h)).filter(A)}async queryFeatureCount(e,t){return We(this,e,t,h)}async queryExtent(e,t){return ze(this,e,t,h)}async queryRelatedFeatures(e,t){return He(this,e,t,h)}async queryRelatedFeaturesCount(e,t){return Ue(this,e,t,h)}async queryTopFeatures(e,t){var u;const{source:r,capabilities:i}=await this.load();if(!r.queryTopFeatures||!((u=i==null?void 0:i.query)!=null&&u.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryTopFeatures capability");const o=await w(()=>import("./TopFeaturesQuery-IOq_mCRr.js"),__vite__mapDeps([32,1,2])),l=await r.queryTopFeatures(o.default.from(e),t);if(l!=null&&l.features)for(const p of l.features)p.layer=p.sourceLayer=this;return l}async queryAttributeBins(e,t){var u;const{source:r,capabilities:i}=await this.load();if(!r.queryAttributeBins||!((u=i==null?void 0:i.operations)!=null&&u.supportsQueryBins))throw new m(h,"Layer source does not support queryAttributeBins capability");Ye(e,i,h);const o=await w(()=>import("./AttributeBinsQuery-BmgHofB9.js"),__vite__mapDeps([33,1,2,34,35,36])),l=await r.queryAttributeBins(o.default.from(e),t);if(l.features)for(const p of l.features)p.layer=p.sourceLayer=this;return l}async queryTopObjectIds(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopObjectIds||!(i!=null&&i.query.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryTopObjectIds capability");const o=await w(()=>import("./TopFeaturesQuery-IOq_mCRr.js"),__vite__mapDeps([32,1,2]));return(await r.queryTopObjectIds(o.default.from(e),t)).filter(A)}async queryTopFeaturesExtent(e,t){var l;const{source:r,capabilities:i}=await this.load();if(!r.queryTopExtents||!((l=i==null?void 0:i.query)!=null&&l.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryTopExtents capability");const o=await w(()=>import("./TopFeaturesQuery-IOq_mCRr.js"),__vite__mapDeps([32,1,2]));return r.queryTopExtents(o.default.from(e),t)}async queryTopFeatureCount(e,t){var l;const{source:r,capabilities:i}=await this.load();if(!r.queryTopCount||!((l=i==null?void 0:i.query)!=null&&l.supportsTopFeaturesQuery))throw new m(h,"Layer source does not support queryFeatureCount capability");const o=await w(()=>import("./TopFeaturesQuery-IOq_mCRr.js"),__vite__mapDeps([32,1,2]));return r.queryTopCount(o.default.from(e),t)}read(e,t){const r=e.featureCollection;if((r||e.type==="Feature Collection")&&(this.resourceInfo=e),r){const i=r.layers;i&&i.length===1&&(super.read(i[0],t),r.showLegend!=null&&super.read({showLegend:r.showLegend},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:(t==null?void 0:t.origin)??void 0,writeLayerSchema:(t==null?void 0:t.writeLayerSchema)??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:o}=t;if(this.dynamicDataSource)return o==null||o.push(F(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((r==="web-map"||r==="web-scene")&&i!=="tables")return o==null||o.push(F(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return o==null||o.push(F(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(r==="web-map"||r==="web-scene")&&i==="tables")return o==null||o.push(F(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new m(h,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){var t;return!!this.loaded&&(((t=this.source)==null?void 0:t.type)==="memory"||It(this,e))}async save(e){return this._debouncedSaveOperations(T.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(T.SAVE_AS,t,e)}_readEditingEnabled(e,t,r){var o;let i=(o=e.layerDefinition)==null?void 0:o.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&(r==null?void 0:r.origin)==="web-map"&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(t=>t.trim()).includes("editing")}_writeEditingEnabled(e,t,r,i){var o,l;if(!e){const u=(l=(o=this.capabilities)==null?void 0:o.operations)!=null&&l.supportsSync?"Query,Sync":"Query";I("layerDefinition.capabilities",u,t),r&&!(i!=null&&i.writeLayerSchema)&&(t.capabilities=u)}}_fetchFirstValidLayerId(e){return Ke(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t=>{const r=t.data;if(r)return this.findFirstValidLayerId(r)})}async initLayerProperties(e){var t;return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(t=this.portalItem)==null?void 0:t.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),k(this.renderer,this.fieldsIndex),Xe(this.timeInfo,this.fieldsIndex),this._hasMemorySource()&&this.geometryType==="mesh"&&(this.capabilities.query.supportsReturnMesh=!0),Et(this,{origin:"service"})}async hasDataChanged(){return et(this)}async fetchPublishingStatus(){const e=this.source;return e!=null&&e.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){var t,r;const e=((t=this.parsedUrl)==null?void 0:t.path)??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||(r=this.fields)!=null&&r.some(i=>i.type==="geometry")||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(r=>{var o;const i=(o=r.prototype)==null?void 0:o.attributes;i&&t&&delete i[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new m("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new m("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(t=>{t.layer=this,t.sourceLayer=this}),this.addHandles([e.on("after-add",t=>{t.item.layer=this,t.item.sourceLayer=this}),e.on("after-remove",t=>{t.item.layer=null,t.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(t=>{t.layer=null,t.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([n({clonable:!1,readOnly:!0})],a.prototype,"_titleCreator",null),s([n(tt)],a.prototype,"attributeTableTemplate",void 0),s([c("service","capabilities")],a.prototype,"readCapabilities",null),s([n({json:{origins:{"web-scene":{write:!1}},write:!0}})],a.prototype,"charts",void 0),s([n({readOnly:!0})],a.prototype,"createQueryVersion",null),s([n({json:{read:{source:"layerDefinition.copyrightText"}}})],a.prototype,"copyright",void 0),s([n({json:{read:{source:"layerDefinition.displayField"}}})],a.prototype,"displayField",void 0),s([n({types:rt,readOnly:!0})],a.prototype,"defaultSymbol",void 0),s([n({type:it})],a.prototype,"dynamicDataSource",void 0),s([n({type:Boolean})],a.prototype,"editingEnabled",null),s([c(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],a.prototype,"readEditingEnabled",null),s([c("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],a.prototype,"readEditingEnabledFromWebMap",null),s([$(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],a.prototype,"writeEditingEnabled",null),s([$("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],a.prototype,"writeEditingEnabledToWebMap",null),s([n({readOnly:!0})],a.prototype,"effectiveEditingEnabled",null),s([n({clonable:!1,readOnly:!0})],a.prototype,"featureTitleFields",null),s([n({...C.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:q}}}}})],a.prototype,"fields",void 0),s([n(C.fieldsIndex)],a.prototype,"fieldsIndex",void 0),s([n({type:_t,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"formTemplate",void 0),s([n({json:{read:{source:"layerDefinition.extent"}}})],a.prototype,"fullExtent",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:q,writer(e,t,r){const i=e?G.toJSON(e):null;i&&I(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:G.read}}})],a.prototype,"geometryType",void 0),s([n({json:{read:{source:"layerDefinition.hasM"}}})],a.prototype,"hasM",void 0),s([n({json:{read:{source:"layerDefinition.hasZ"}}})],a.prototype,"hasZ",void 0),s([n(at)],a.prototype,"id",void 0),s([n({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],a.prototype,"infoFor3D",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],a.prototype,"isTable",void 0),s([c("service","isTable",["type","geometryType"]),c("isTable",["layerDefinition.type","layerDefinition.geometryType"])],a.prototype,"readIsTable",null),s([$("web-map","isTable")],a.prototype,"writeIsTable",null),s([n(ot)],a.prototype,"labelsVisible",void 0),s([n({type:[nt],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:D,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:D,write:{enabled:!0,layerContainerTypes:O}}},name:"layerDefinition.drawingInfo.labelingInfo",read:D,write:!0}})],a.prototype,"labelingInfo",void 0),s([n((()=>{const e=j(lt);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,r,i){I(i,ut(t),r)}}},e})())],a.prototype,"opacity",void 0),s([n(dt)],a.prototype,"legendEnabled",void 0),s([n({type:["show","hide"],json:(()=>{const e=j(pt.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],a.prototype,"listMode",void 0),s([c("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],a.prototype,"readGlobalIdField",null),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:q}}}}})],a.prototype,"objectIdField",void 0),s([c("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],a.prototype,"readObjectIdField",null),s([n({type:["ArcGISFeatureLayer"],json:{write:{target:"layerType",ignoreOrigin:!0,layerContainerTypes:O}}})],a.prototype,"operationalLayerType",void 0),s([n(C.outFields)],a.prototype,"outFields",void 0),s([n({readOnly:!0})],a.prototype,"parsedUrl",null),s([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([n(yt)],a.prototype,"popupEnabled",void 0),s([n({type:ct,json:{name:"popupInfo",write:!0}})],a.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],a.prototype,"defaultPopupTemplate",null),s([n({types:ft,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:ht,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:O,overridePolicy:(e,t,r)=>({ignoreOrigin:r==null?void 0:r.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r==null?void 0:r.writeLayerSchema})}}})],a.prototype,"renderer",null),s([c("service","renderer",["drawingInfo.renderer","defaultSymbol"]),c("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],a.prototype,"readRenderer",null),s([n()],a.prototype,"resourceInfo",void 0),s([n((()=>{const e=j(mt);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],a.prototype,"screenSizePerspectiveEnabled",void 0),s([n({clonable:!1})],a.prototype,"source",null),s([bt("source")],a.prototype,"castSource",null),s([c("portal-item","source",["featureSet"]),c("web-map","source",["featureSet"])],a.prototype,"readSource",null),s([n({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],a.prototype,"spatialReference",void 0),s([n({type:Number})],a.prototype,"subtypeCode",void 0),s([n({type:[Q]})],a.prototype,"templates",void 0),s([c("templates",["editFieldsInfo","creatorField","editorField","templates"])],a.prototype,"readTemplates",null),s([n({type:gt})],a.prototype,"timeInfo",void 0),s([n()],a.prototype,"title",void 0),s([c("service","title",["name"]),c("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],a.prototype,"readTitle",null),s([c("web-map","title",["layerDefinition.name","title"])],a.prototype,"readTitleFromWebMap",null),s([n({type:String})],a.prototype,"sublayerTitleMode",void 0),s([n({json:{read:!1}})],a.prototype,"type",void 0),s([n({type:String})],a.prototype,"typeIdField",void 0),s([c("service","typeIdField"),c("typeIdField",["layerDefinition.typeIdField"])],a.prototype,"readTypeIdField",null),s([n({type:[Z]})],a.prototype,"types",void 0),s([c("service","types",["types"]),c("types",["layerDefinition.types"])],a.prototype,"readTypes",null),s([n({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],a.prototype,"visible",void 0),s([c("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],a.prototype,"readVisible",null),a=s([E("esri.layers.FeatureLayer")],a);const Zt=a;export{Zt as default};
